<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="CartoonDaoImpl"  >

	<resultMap class="com.fq.dao.entity.vo.livecartoon.LiveCartoonPageVO" id="liveCartoonPageResult">
		<result property="lcpId" 					column="lcp_id"/>
		<result property="lcId" 					column="lc_id"/>
		<result property="pageNo" 					column="page_no"/>
		<result property="cartoonUrl" 				column="cartoon_url"/>
		<result property="pageHeight" 				column="page_height"/>
		<result property="pageWidth" 				column="page_width"/>
	</resultMap>
	
	<resultMap class="com.fq.dao.entity.vo.livecartoon.LiveCartoonChapterVO" id="liveCartoonChapterResult">
		<result property="piId" 					column="pi_id"/>
		<result property="lcId" 					column="lc_id"/>
		<result property="title" 					column="title"/>
		<result property="coverUrl" 				column="cover_url"/>
		<result property="chapterCoverUrl" 			column="chapter_cover_url"/>
		<result property="episodeNo" 				column="episode_no"/>
		<result property="createDt" 				column="create_dt"/>
		<result property="isFree" 					column="is_free"/>
		<result property="readPermision" 			column="read_permision"/>
		<result property="visitNo" 					column="visit_no"/>
		<result property="unlockJpoint" 			column="unlock_Jpoint"/>
		<result property="createTm" 				column="create_tm"/>
	</resultMap>
	


	<select id="selectLiveCartoonChaptersByPlcId" resultClass="java.util.HashMap" parameterClass="java.lang.Integer">
		select 
			chapter.lc_id lcId ,
			chapter.episode_no episodeNo ,
			chapter.title title     ,
			chapter.cover_url coverUrl  ,
			chapter.is_free isFree,
			chapter.visit_no visitNo,
			chapter.create_dt createDt , 
			chapter.create_tm createTm , 
			chapter.have_dubbing haveDubbing ,
			t.payNum  payNum
		from plc_live_cartoon_chapter chapter
		left join 
			(
				select count(ur.account) payNum , ur.lc_id 
				from plc_user_read_permision ur 
				 	group by ur.lc_id 
			) t    on t.lc_id = chapter.lc_id 
		where chapter.plc_id =#plcId# and chapter.is_deleted = 'N'
		
		order by episodeNo desc 
	</select>
	
	<select id="selectLiveCartoonByPlcId" resultClass="java.util.HashMap" parameterClass="java.lang.Integer">
		select 
			c.pi_id    piId  , 
			c.chapter_cover_url  chapterCoverUrl  , 
			pi.project_name     projectName   ,
			c.plc_id plcId           ,
			c.cartoon_title cartoonTitle    ,
			c.cartoon_cover_url cartoonCoverUrl ,
			c.editor_account editorAccount   ,
			c.current_episode currentEpisode  ,
			c.total_episode totalEpisode    ,
			c.free_episode freeEpisode     ,
			c.unlock_jpoint unlockJpoint   ,
			c.cartoon_desc cartoonDesc ,
			c.share_url shareUrl ,
			c.visit_no visitNo ,
			lci.cartoon_cover_url coverUrl ,
			c.share_episode shareEpisode
			
		from plc_live_cartoon c  
		left join p_project_info pi  on    pi.pi_id = c.pi_id 
		left join wm_livecartoon_config_info lci on lci.plc_id=c.plc_id
		where c.is_deleted = 'N' and c.plc_id = #plcId#
	</select>
	
	<select id="selectLiveCartoon"  parameterClass="java.util.Map"   resultClass="java.util.HashMap">
		select 
			c.plc_id plcId           ,
			c.pi_id piId    ,
			c.cartoon_title cartoonTitle    ,
			c.cartoon_cover_url cartoonCoverUrl ,
			c.editor_account editorAccount   ,
			c.current_episode currentEpisode  ,
			c.total_episode totalEpisode    ,
			c.free_episode freeEpisode     ,
			c.unlock_jpoint unlockJpoint  ,
			c.visit_no visitNo , 
			c.order_index orderIndex ,
			c.have_project_movie  haveProjectMovie ,
			c.have_promote_magic havePromoteMagic ,
			c.to_movie_switch toMovieSwitch ,
			c.share_episode shareEpisode
		from plc_live_cartoon c
		where c.is_deleted = 'N'
		<dynamic>   
            <isNotEmpty prepend="and" property="plcId"> c.plc_id =#plcId#</isNotEmpty>
            <isNotEmpty prepend="and" property="piId"> c.pi_id =#piId#</isNotEmpty>  
            <isNotEmpty prepend="and" property="cartoonTitle"> c.cartoon_title =#cartoonTitle#</isNotEmpty> 
            <isNotEmpty prepend="and" property="editorAccount">  c.editor_account like concat('%',#editorAccount#,'%')</isNotEmpty> 
            <isNotEmpty prepend="and" property="cartoonCoverUrl"> c.cartoon_cover_url like concat('%',#cartoonCoverUrl#,'%')   </isNotEmpty>
            <isNotEmpty prepend="and" property="currentEpisode"> c.current_episode =#currentEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="totalEpisode"> 	c.total_episode =#totalEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="freeEpisode"> c.free_episode =#freeEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="unlockJpoint"> c.unlock_jpoint =#unlockJpoint#</isNotEmpty>
            <isNotEmpty prepend="and" property="visitNo"> c.visit_no =#visitNo#</isNotEmpty>
         </dynamic> 
		order by c.order_index desc
		  <include refid="page"/>  
	</select>
	
	<select id="selectLiveCartoonTotals" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		select count(c.plc_id)
		from plc_live_cartoon c
		where c.is_deleted = 'N'
		<dynamic>   
            <isNotEmpty prepend="and" property="plcId"> c.plc_id =#plcId#</isNotEmpty>
            <isNotEmpty prepend="and" property="piId"> c.pi_id =#piId#</isNotEmpty>  
            <isNotEmpty prepend="and" property="cartoonTitle"> c.cartoon_title =#cartoonTitle#</isNotEmpty> 
            <isNotEmpty prepend="and" property="editorAccount">  c.editor_account like concat('%',#editorAccount#,'%')</isNotEmpty> 
            <isNotEmpty prepend="and" property="cartoonCoverUrl"> c.cartoon_cover_url like concat('%',#cartoonCoverUrl#,'%')   </isNotEmpty>
            <isNotEmpty prepend="and" property="currentEpisode"> c.current_episode =#currentEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="totalEpisode"> 	c.total_episode =#totalEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="freeEpisode"> c.free_episode =#freeEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="unlockJpoint"> c.unlock_jpoint =#unlockJpoint#</isNotEmpty>
            <isNotEmpty prepend="and" property="visitNo"> c.visit_no =#visitNo#</isNotEmpty>
         </dynamic> 
	</select>
	<update id="updateLiveCartoon" parameterClass="java.util.Map">
		update plc_live_cartoon c
		set
			c.pi_id = #piId#  ,
			c.cartoon_title 	= #cartoonTitle#    ,
			c.cartoon_cover_url = #cartoonCoverUrl# ,
			c.chapter_cover_url = #chapterCoverUrl# ,
			c.editor_account 	= #editorAccount#   ,
			c.current_episode 	= #currentEpisode#  ,
			c.total_episode 	= #totalEpisode#    ,
			c.free_episode 		= #freeEpisode#     ,
			c.unlock_jpoint 	= #unlockJpoint#   ,
			c.cartoon_desc 		= #cartoonDesc# ,
			c.share_url 		= #shareUrl#  ,
			c.share_episode     = #shareEpisode#
		where   c.plc_id = #plcId# 
	</update>
	
	<insert id="insertLiveCartoonChapter" parameterClass="java.util.Map">
		insert into plc_live_cartoon_chapter
		(
			plc_id ,		episode_no , 		title ,
			cover_url ,		create_dt ,			create_tm ,
			is_free ,		is_deleted , have_dubbing
		)
		values(
			#plcId# ,		#episodeNo# , 		#title# ,
			#coverUrl# ,	#createDt# ,		#createTm# ,
			#isFree# ,		'N' , #haveDubbing#
		)
	</insert>
	
	<update id="updateLiveCartoonChapter" parameterClass="java.util.Map">
		update plc_live_cartoon_chapter c
		set 
			c.episode_no 	= #episodeNo# ,
			c.title 		= #title#     ,
			c.cover_url 	= #coverUrl#  ,
			c.is_free 		= #isFree#  ,
			c.create_dt		= #createDt#  ,
			c.create_tm		= #createTm#  ,
			c.have_dubbing  = #haveDubbing#
		where c.lc_id = #lcId#
	</update>
	<select id="queryLiveCartoonPages" parameterClass="java.lang.Integer" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonPageVO">
		 select 		lcp.lcp_id lcpId , 				lcp.lc_id lcId , 				lcp.page_no pageNo , 
		 				lcp.cartoon_url  cartoonUrl , 	lcp.page_height  pageHeight , 	lcp.page_width pageWidth , 
		 				lcp.is_deleted isDeleted 
		 from 			plc_live_cartoon_page lcp 
		 where 			lcp.lc_id = #lcId#  and lcp.is_deleted = 'N'
		 order by lcp.page_no
	
	</select>
	
	<!-- queryListCartoonPageByLcId -->
	<select id="queryListCartoonPageByLcId" parameterClass="java.lang.Integer" resultMap="liveCartoonPageResult">
		select 		* 
		from   		plc_live_cartoon_page lcp 
		where 		lcp.lc_id = #lcId# and lcp.is_deleted = 'N' 
		order by lcp.page_no
	</select>
	
	<update id="updateLiveCartoonPage" parameterClass="java.util.Map">
		update plc_live_cartoon_page p
		set 
			p.page_no 		= #pageNo# ,
			p.cartoon_url 	= #cartoonUrl# ,
			p.page_height 	= #pageHeight# ,
			p.page_width 	= #pageWidth# ,
			p.is_deleted 	= #isDeleted# 
		where p.lcp_id = #lcpId#
	</update>
	
	<insert id="insertLiveCartoonPage" parameterClass="java.util.Map">
		insert into plc_live_cartoon_page
		(
			lc_id		,
			page_no 	,
			cartoon_url ,
			page_height ,
			page_width  ,
			is_deleted 
		)
		values
		(
			#lcId# ,
			#pageNo# ,    
			#cartoonUrl# ,
			#pageHeight# ,
			#pageWidth# , 
			#isDeleted#
		)
		
	</insert>
	<insert id="addLiveCartoon" parameterClass="java.util.Map">
		insert 		into	 	plc_live_cartoon 				( 
					cartoon_cover_url , 			share_url , 				cartoon_title , 
					cartoon_desc , 					editor_account , 			current_episode , 		
					total_episode , 				reward_total , 				free_episode , 
					unlock_jpoint ,					visit_no ,					pi_id		,
					share_episode				) 
		values (     
					#cartoonCoverUrl#,				#shareUrl#,					#cartoonTitle#,
					#cartoonDesc# , 				#editorAccount# , 			#currentEpisode# , 
					#totalEpisode#, 				#rewardTotal# , 			#freeEpisode# ,
					#unlockJpoint#  ,				0 ,							#piId#		,
					#freeEpisode#	)
	</insert>
	
	<update id="deleteLiveCartoonPage" parameterClass="java.lang.Integer">
		update 
		plc_live_cartoon_page
		set is_deleted = 'Y'
		where lcp_id = #lcpId#
	</update>
	<select id="selectLiveCartoonChapterCoverUrl" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonChapterVO">
		select 
			chapter.lc_id  lcId ,
			chapter.episode_no episodeNo  , 
			chapter.title   title    ,       
			chapter.cover_url  coverUrl  ,   
			chapter.is_free isFree ,         
			chapter.visit_no visitNo ,       
			chapter.create_dt createDt       
		from plc_live_cartoon_chapter chapter
		where chapter.lc_id =#lcId#          
		
		
	</select>
	<update id="updateLiveCartoonChapterCoverUrl" parameterClass="java.util.Map">
		update 	plc_live_cartoon_chapter c
		set 	c.cover_url = #cartoonUrl# 
		where 	c.lc_id = #lcId#
	</update>
	<update id="updateLiveCartoonOrderIndex" parameterClass="java.util.Map">
		update 	plc_live_cartoon lc 
		set 	lc.order_index = #orderIndex# 
		where 	lc.plc_id = #plcId# 
	</update>
	
	<select id="queryCartoonProjectIdAndName" resultClass="java.util.HashMap">
		select c.pi_id piId , c.cartoon_title cartoonTitle 
		from plc_live_cartoon c
	</select>
	
	<select id="queryLiveCartoon"  parameterClass="java.util.Map"   resultClass="java.util.HashMap">
		select 
			c.plc_id plcId           ,
			c.pi_id piId    ,
			c.cartoon_title cartoonTitle    ,
			c.cartoon_cover_url cartoonCoverUrl ,
			c.editor_account editorAccount   ,
			c.current_episode currentEpisode  ,
			c.total_episode totalEpisode    ,
			c.free_episode freeEpisode     ,
			c.unlock_jpoint unlockJpoint  ,
			c.visit_no visitNo , 
			c.order_index orderIndex  , 
			c.have_promote_magic havePromoteMagic ,
			c.to_movie_switch toMovieSwitch
		from plc_live_cartoon c
		where c.is_deleted = 'N' and c.pi_id=#piId# 
		<dynamic>   
            <isNotEmpty prepend="and" property="plcId"> c.plc_id =#plcId#</isNotEmpty>
            <isNotEmpty prepend="and" property="piId"> c.pi_id =#piId#</isNotEmpty>  
            <isNotEmpty prepend="and" property="cartoonTitle"> c.cartoon_title =#cartoonTitle#</isNotEmpty> 
            <isNotEmpty prepend="and" property="editorAccount">  c.editor_account like concat('%',#editorAccount#,'%')</isNotEmpty> 
            <isNotEmpty prepend="and" property="cartoonCoverUrl"> c.cartoon_cover_url like concat('%',#cartoonCoverUrl#,'%')   </isNotEmpty>
            <isNotEmpty prepend="and" property="currentEpisode"> c.current_episode =#currentEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="totalEpisode"> 	c.total_episode =#totalEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="freeEpisode"> c.free_episode =#freeEpisode#</isNotEmpty>
            <isNotEmpty prepend="and" property="unlockJpoint"> c.unlock_jpoint =#unlockJpoint#</isNotEmpty>
            <isNotEmpty prepend="and" property="visitNo"> c.visit_no =#visitNo#</isNotEmpty>
         </dynamic> 
		order by c.order_index desc
		<include refid="page"/>  
	</select>
	
	<update id="updateLiveCartoonChapterUpdatedState_Y" parameterClass="java.util.Map">
		update   	plc_live_cartoon_chapter lcc , 		plc_live_cartoon lc  
		set  		lcc.is_updated = 'Y' 
		where  	 <![CDATA[  lcc.plc_id = lc.plc_id  and  lcc.episode_no <= lc.current_episode ]]>   
	</update>
	<update id="updateLiveCartoonChapterUpdatedState_N" parameterClass="java.util.Map" >
		update   	plc_live_cartoon_chapter lcc ,		plc_live_cartoon lc  
		set  		lcc.is_updated = 'N' 
		where 		lcc.plc_id = lc.plc_id  	and		lcc.episode_no > lc.current_episode  		
	</update>
	
	<update id="changeHaveProjectMovie" parameterClass="java.util.Map">
		update plc_live_cartoon lc set lc.have_project_movie = #haveProjectMovie# 
		where lc.plc_id = #plcId#
	</update>
	
	<insert id="insertCoverUrl" parameterClass="java.util.Map">
		insert 		into 	wm_livecartoon_config_info 		
				(   plc_id ,   	cartoon_cover_url     )  
		values 	( 	#plcId#  , #coverUrl# )
	</insert>
	
	<select id="selectLivecartoonConfig"  parameterClass="java.util.Map"   resultClass="java.util.HashMap">
		select
		lci.plc_id plcId , lci.cartoon_cover_url coverUrl
		from wm_livecartoon_config_info lci
		where lci.plc_id=#plcId#
	</select>
	
	<update id="updateLiveCartoonConfig"   parameterClass="java.util.Map">
		update wm_livecartoon_config_info lci 
		set lci.cartoon_cover_url = #coverUrl#
		where lci.plc_id = #plcId#
	</update>
	
	<select id="selectLiveCartoonUnlockNum"   resultClass="java.util.HashMap">
		select 
		lcc.plc_id plcId ,  count(urp.account) unlockNum
		from plc_live_cartoon_chapter lcc 
		left join plc_live_cartoon c on c.plc_id=lcc.plc_id
		left join plc_user_read_permision urp on urp.lc_id=lcc.lc_id
		group by lcc.plc_id 
	</select>
	
	<select id="selectLiveCartoonChapterList"   parameterClass="java.util.Map"  resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonChapterVO">
		select 
		lcc.lc_id lcId ,		lcc.plc_id plcId   , 	lcc.create_dt createDt , 		lcc.create_tm createTm  , 
		lcc.title  ,			lc.pi_id piId, 					lc.cartoon_title  cartoonTitle , 
		lcc.plc_id plcId  
		from plc_live_cartoon_chapter lcc 
		left join plc_live_cartoon lc  on lc.plc_id = lcc.plc_id 
		where lcc.is_updated = 'N'  and lcc.is_deleted = 'N'
	</select>
	
	<!--定时更新真人漫发布状态(是否更新)-->
	<update id="updateLiveCartoonChapterState" parameterClass="java.util.Map" >
		update
		plc_live_cartoon_chapter lcc
		set lcc.is_updated='Y'
		where lcc.lc_id   in 
			<iterate  open="("  close=")"  conjunction=","  property="lcIds"  >
        		#lcIds[]#
        	</iterate>
	</update>
	
	<select id="queryLiveCartoonChapterList"   parameterClass="java.util.Map"  resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonChapterVO">
		select 
	 	lcc.plc_id   plcId , 	max(lcc.episode_no)  maxEpisodeNo
		from plc_live_cartoon_chapter lcc
		where lcc.is_updated = 'Y' 
		group by lcc.plc_id 
	</select>
	
	<!--定时更新真人漫当前更新集数-->
	<update id="updateLiveCartoonCurrentEpisode" parameterClass="java.util.Map" >
		update 
		plc_live_cartoon plc 
	 	set  plc.current_episode = #maxEpisodeNo#
	 	where plc.plc_id=#plcId#
	</update>
	
	<select id="queryLiveCartoonInfoByPlcId" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonInfoVO">
		select  plc.plc_id plcId , 						plc.cartoon_desc cartoonDesc , 			plc.cartoon_cover_url cartoonCoverUrl , 
				plc.chapter_cover_url chapterCoverUrl , plc.cartoon_title cartoonTitle , 		pi.project_tags projectTags , 
				pi.project_author projectAuthor , 		pi.project_desc_original projectDescOriginal 
		from plc_live_cartoon plc 
		left join p_project_info pi on pi.pi_id = plc.pi_id 
		where plc.plc_id =#plcId#
	</select>
	<select id="queryLiveCartoonChapterByPlcId" parameterClass="java.lang.Integer" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonChapterVO">
		select 		lcc.lc_id lcId ,lcc.title , 			lcc.cover_url coverUrl , 			lcc.episode_no , 
					lcc.is_free isFree  , 	lc.chapter_cover_url chapterCoverUrl
		from 		plc_live_cartoon_chapter lcc 
			left join plc_live_cartoon lc on  lc.plc_id =lcc.plc_id 
		where 		lcc.plc_id =  #plcId#  
		order  by 	lcc.episode_no 
	</select>
	<update id="updateLiveCartoonPromoteStatic" parameterClass="java.util.Map" >
		update 		plc_live_cartoon lc 
		set 		lc.have_promote_magic = #havePromoteMagic# 
		where 		lc.plc_id = #plcId# 
	</update>

	<select id="queryAllLiveCartoonPages" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonPageVO">
		 select 	plc.cartoon_title cartoonTitle,	c.episode_no episodeNo,  lcp.lcp_id lcpId , 				lcp.lc_id lcId , 				lcp.page_no pageNo , 
		 				lcp.cartoon_url  cartoonUrl , 	lcp.page_height  pageHeight , 	lcp.page_width pageWidth , 
		 				lcp.is_deleted isDeleted 
		 from 			plc_live_cartoon_page lcp 
		 left join plc_live_cartoon_chapter c on lcp.lc_id = c.lc_id
		 left join plc_live_cartoon plc on plc.plc_id = c.plc_id 
		 
		 order by lcp.page_no
	
	</select>
	<insert id="insertCartoonPageCoverUrl" parameterClass="java.util.Map">
		insert 		into 	plc_live_cartoon_chapter 		
				(  plc_id , cover_url  ,  episode_no  ,title  , create_dt ,create_tm ,is_free, have_dubbing)  
		values 	(  #plcId# , #coverUrl#  , #episodeNo# ,#title#  , #createDt# , #createTm# ,#isFree# ,#haveDubbing#)
	</insert>
	
	<select id="queryLiveCartoonChapterBarrage"  parameterClass="java.util.Map"   resultClass="java.util.HashMap">
		select 
		plc.cartoon_title cartoonTitle  , ui.account account  , ui.user_nick  userNick,
		cb.barrage  barrage, lcc.episode_no episodeNo , cb.create_dt createDt 
		from  plc_chapter_barrage cb  
		left join plc_live_cartoon_chapter lcc on lcc.lc_id = cb.lc_id
		left join plc_live_cartoon plc  on plc.plc_id = lcc.plc_id
		left join u_user_info ui on ui.account=cb.account 
		<dynamic prepend="where">   
            <isNotEmpty prepend="and" property="account"> ui.account like concat('%',#account#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="episodeNo"> lcc.episode_no =#episodeNo#</isNotEmpty> 
            <isNotEmpty prepend="and" property="cartoonTitle"> plc.cartoon_title like concat('%',#cartoonTitle#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( cb.create_dt , '%Y-%m-%d ')  =  #selStartDate# ]]>  </isNotEmpty>
         </dynamic> 
         	group by cb.cd_id 
			order by cb.create_dt    desc
		 <include refid="page"/>
	</select>
	
	<select id="queryLiveCartoonChapterBarrageTotals"  parameterClass="java.util.Map"   resultClass="java.lang.Integer">
		select 
		count(cb.cd_id)
		from  plc_chapter_barrage cb  
		left join plc_live_cartoon_chapter lcc on lcc.lc_id = cb.lc_id
		left join plc_live_cartoon plc  on plc.plc_id = lcc.plc_id
		left join u_user_info ui on ui.account=cb.account 
		<dynamic prepend="where">   
            <isNotEmpty prepend="and" property="account"> ui.account like concat('%',#account#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="episodeNo"> lcc.episode_no =#episodeNo#</isNotEmpty> 
            <isNotEmpty prepend="and" property="cartoonTitle">  plc.cartoon_title like concat('%',#cartoonTitle#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( cb.create_dt, '%Y-%m-%d ')  =  #selStartDate# ]]>  </isNotEmpty>
         </dynamic>
	</select>
	
	<delete id="deleteLiveCartoonChapterBarrage" parameterClass="java.util.Map">
			delete 
			from plc_chapter_barrage 
			where cd_id =#cdId#
	</delete>
	
	<!-- 批量删除漫画页-->
	<update id="deleteSingleLiveCartoonPage" parameterClass="java.lang.String">
		update 
		plc_live_cartoon_page 
		set is_deleted='Y'
		where lcp_id = #lcpId#
	</update>
	
	<update id="changeCartoonChapterCoverUrl" parameterClass="java.util.Map">
		update 
		plc_live_cartoon_chapter
		set cover_url = #coverUrl#
		where lc_id = #lcId#
	</update>
	<!-- 查询漫画页的配音信息 -->
	<select id="queryLiveCartoonPageDubbing"  parameterClass="java.util.Map"   resultClass="java.util.HashMap">
		 select 
		 cd.cd_id cdId , cd.account account , ui.user_nick userNick ,
		 cd.dubbing_key  dubbingKey ,cd.create_dt createDt  , lcp.lcp_id lcpId ,
		 lcp.lc_id lcId
		 from  plc_chapter_dubbing cd	
		 left join u_user_info ui on ui.account=cd.account
		 left join plc_live_cartoon_page lcp on cd.lcp_id=lcp.lcp_id 
		 where 	lcp.lc_id = #lcId# and lcp.lcp_id=#lcpId#   
		<dynamic>   
            <isNotEmpty prepend="and" property="account"> cd.account like concat('%',#account#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( cd.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( cd.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
         </dynamic> 
			order by cd.create_dt desc
		 <include refid="page"/>
	</select>
	<!-- 统计漫画页配音条目总数 -->
	<select id="queryLiveCartoonPageDubbingTotals"  parameterClass="java.util.Map"   resultClass="java.lang.Integer">
		select 
		count(cd.cd_id)
		from plc_chapter_dubbing cd
		left join u_user_info ui on ui.account=cd.account
		left join plc_live_cartoon_page lcp on cd.lcp_id=lcp.lcp_id 
		where 	lcp.lc_id = #lcId# and lcp.lcp_id=#lcpId#  
		<dynamic >   
            <isNotEmpty prepend="and" property="account"> cd.account like concat('%',#account#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
            <isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( cd.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( cd.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
         </dynamic> 
	</select>
	<!--删除漫画配音 -->
	<delete id="deleteLiveCartoonPageDubbing" parameterClass="java.util.Map">
			delete 
			from plc_chapter_dubbing 
			where cd_id =#cdId#
	</delete>
	
	<!--删除漫画 -->
	<update id="deleteLiveCartoon" parameterClass="java.lang.Integer">
			update 
			plc_live_cartoon lc
			set lc.is_deleted = 'Y'
			where lc.plc_id =#plcId#
	</update>
	
	<!--删除漫画章节 -->
	<update id="deleteLiveCartoonChapter" parameterClass="java.util.Map">
			delete
			from  
			plc_live_cartoon_chapter 
			where lc_id = #lcId#
	</update>
	
	<select id="selectEpisodeNoByPlcId"   resultClass="java.lang.Integer">
		select 
		max(lcc.episode_no) episodeNo
		from plc_live_cartoon_chapter lcc
		where lcc.plc_id = #plcId# and lcc.is_updated = 'Y' and lcc.is_deleted = 'N'
	</select>
	
	<update id="updateLiveCartoonCurrentEpisodeByPlcId" parameterClass="java.util.Map">
			update 
			plc_live_cartoon  lc
			set lc.current_episode = #episodeNo#
			where lc.plc_id =#plcId# 
	</update>
	
	<insert id="insertDeletedLiveCartoonChapter" parameterClass="java.util.Map"> 
		insert into d_plc_live_cartoon_chapter (
				lc_id 		, 	plc_id    , 	 episode_no ,
				title 		,   cover_url ,   	 create_dt  , 
				create_tm 	,   is_free  , 	     visit_no   , have_dubbing , 
				is_updated  ,   is_deleted 
		)
		select  lc_id 		, 	plc_id    , 	 episode_no ,
				title 		,   cover_url ,   	 create_dt  , 
				create_tm 	,   is_free  , 	     visit_no   , have_dubbing , 
				is_updated  ,   is_deleted 
		
		from plc_live_cartoon_chapter lcc
		where lcc.lc_id = #lcId#
	</insert> 
	
	<select id="queryAllLiveCartoonInfo" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonInfoVO">
		select
		plc.plc_id plcId , plc.cartoon_title cartoonTitle 
		from plc_live_cartoon plc
	</select>
	
	<select id="queryLiveCartoonReport" parameterClass="com.fq.form.report.QueryCartoonProjectForm" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonInfoVO">
		select 
		s.cntNum playTotalCount , n.cntNum unlockTotalCount , plc.cartoon_title  cartoonTitle , plc.plc_id  plcId
		from  plc_live_cartoon plc 
		left join 
			( select sum(t.cnt)  cntNum , t.plcId plcId 
			from (select count(1) cnt ,   plc.plc_id plcId 
				from l_live_cartoon_visit_log l 
				left join plc_live_cartoon_chapter lcc on lcc.lc_id = l.lc_id
				left join plc_live_cartoon plc on plc.plc_id = lcc.plc_id
				group by l.lc_id
				)t  group by t.plcId 
			)s on s.plcId = plc.plc_id 			
		left join (
				select sum(m.cnt) cntNum , m.plcId plcId 
				from 
				( select count(1) cnt ,  c.plc_id plcId 
				from plc_user_read_permision urp 
				left join plc_live_cartoon_chapter lcc on lcc.lc_id = urp.lc_id 
				left join plc_live_cartoon c on c.plc_id = lcc.plc_id
				group by urp.lc_id 
				)m  group by m.plcId 		
			)n  on n.plcId = plc.plc_id
			<dynamic prepend="where">
				 <isNotEmpty prepend="and" property="plcId"> plc.plc_id like concat('%',#plcId#,'%')</isNotEmpty>
			</dynamic>     
			group by plcId
	</select>
	
	<select id="selectRecentLiveCartoonRankList" resultClass="com.fq.dao.entity.po.LiveCartoonRankPO">
		select 
		t.cnt  recentWeekPlayCount , t.visitNo totalPlayCount, t.cartoonTitle cartoonTitle  ,  t.createDt createDt , t.chapterCoverUrl chapterCoverUrl  , 
		t.currentEpisode currentEpisode , 	t.account account  , t.headImgUrl headImgUrl , t.piId piId 
		from (select  sum(n.cnt) cnt  , n.cartoonTitle cartoonTitle , n.piId piId , n.createDt createDt , n.chapterCoverUrl chapterCoverUrl  , n.currentEpisode currentEpisode , 
		n.account account  , n.headImgUrl headImgUrl , n.visitNo visitNo  
		from (select count(1) cnt , l.lc_id  lcId , plc.cartoon_title cartoonTitle , plc.pi_id piId , l.create_dt createDt  , plc.chapter_cover_url chapterCoverUrl ,
			plc.current_episode  currentEpisode , plc.editor_account account ,ui.head_img_url headImgUrl , plc.visit_no visitNo 
			from l_live_cartoon_visit_log l 
			left join plc_live_cartoon_chapter lcc on lcc.lc_id = l.lc_id
			left join plc_live_cartoon plc on plc.plc_id = lcc.plc_id
			left join u_user_info ui on ui.account = plc.editor_account 
			where <![CDATA[DATE_SUB(CURDATE(), INTERVAL 7 DAY) <= date(l.create_dt) ]]> 
			group by l.lc_id
			)n  group by n.piId 
		)t  
		order by t.cnt desc , totalPlayCount desc , t.createDt desc 
		limit 0 , 5
	</select>
	
	<delete id="deleteRankLiveCartoon">
		delete from sp_rank 
		where busi_type = 2
	</delete>
	<!-- 插入新的七日榜漫画排行记录 -->
	<insert id="insertRankLiveCartoon" parameterClass="com.fq.dao.entity.po.LiveCartoonRankPO">
		insert 			into 		sp_rank 
			(  			rank_no  ,  		pi_id  , 			recently_box_offie 		 ,  total_box_offie ,
						busi_type ,		projec_name  , 			episode_no  			 ,	 account    ,
						head_img_url   	, cover_url )
			values(
						#rankNo# , 			#piId#      , 		#recentWeekPlayCount#,  #totalPlayCount#	,
						#busiType#,		#cartoonTitle#	,		#currentEpisode#,		#account#	,
						#headImgUrl# , #chapterCoverUrl#
			)
	</insert>
	<!-- 修改漫画前往图片剧开关 -->
	<update id="updateToMovieSwitch" parameterClass="java.util.Map">
		update plc_live_cartoon  plc 
		set plc.to_movie_switch = #toMovieSwitch#
		where plc.plc_id = #plcId#
	</update>
	<!-- 更新漫画播放量 -->
	<update id="updateLiveCartoonVisitNo" >
		update plc_live_cartoon plc , (
			select c.plc_id , count(l.id) cnt 
			from l_live_cartoon_visit_log l 
			left join plc_live_cartoon_chapter c on l.lc_id = c.lc_id 
			group by c.plc_id
		)t
		set plc.visit_no = t.cnt 
		where plc.plc_id = t.plc_id 	
	</update>
	
	<select id="selectLiveCartoonParamByPlcId" parameterClass="java.lang.Object" resultClass="com.fq.dao.entity.vo.livecartoon.LiveCartoonInfoVO">
		select lcc.lc_id lcId , plc.cartoon_title cartoonTitle , plc.cartoon_desc cartoonDesc , plc.cartoon_cover_url cartoonCoverUrl	
		from  plc_live_cartoon plc 
		left join plc_live_cartoon_chapter lcc on lcc.plc_id = plc.plc_id 
		where plc.plc_id = #plcId#
		order by lcc.lc_id asc  limit 1
	</select>
	<!-- 更新漫画某一话播放量 -->
	<update id="updateLiveCartoonChapterVisitNo">
		update plc_live_cartoon_chapter lcc  , (
			select l.lc_id  , count(l.id) cnt 
			from l_live_cartoon_visit_log l 
			group by l.lc_id
		)t
		set lcc.visit_no = t.cnt 
		where lcc.lc_id = t.lc_id
	</update>
	
	<select id="selectFreeEpisodeNoByPlcId" parameterClass="java.lang.Integer" resultClass="java.util.HashMap">
		select 
		lcc.episode_no episodeNo
		from plc_live_cartoon_chapter lcc
		where lcc.plc_id =#plcId#  and  lcc.is_free = 'Y'
	</select>
	
	<select id="selectSysCartoonShareKeyInt" resultClass="java.lang.Integer">
		select plc.plc_id plcId from sp_sys_info si 
		left join plc_live_cartoon_chapter lcc on lcc.lc_id = si.key_int
		left join plc_live_cartoon plc on plc.plc_id = lcc.plc_id
		where si.key1 = 'user' and si.key2 = 'login' and si.key3 = 'share' 
	</select>
	
	<delete id="deleteCartoonUpdateVisitInfo" parameterClass="java.lang.Integer">
		delete from plc_cartoon_update_visit where plc_id = #plcId#
	</delete>
	
		
</sqlMap>