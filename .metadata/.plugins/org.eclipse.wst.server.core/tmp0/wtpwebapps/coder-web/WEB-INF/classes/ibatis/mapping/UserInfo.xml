<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="UserDaoImpl">
	
	<!--selectNewUserCount -->
	<select id="selectNewUserCount" parameterClass="java.util.Map" resultClass="Integer">
		select 	count(*) 
		from 	u_user_info ui 
		<dynamic prepend="where">     
			<isNotEmpty prepend="and" property="yesterday"> <![CDATA[ ui.write_date >= #yesterday# ]]></isNotEmpty>
			<isNotEmpty prepend="and" property="today"> <![CDATA[ui.write_date <= #today# ]]></isNotEmpty>
        </dynamic>
	</select>
	
	
	<!--selectTotalCount -->
	<select id="selectTotalCount" parameterClass="java.util.Map" resultClass="Integer">
		select 	count(*) 
		from 	u_user_info ui 
		<dynamic prepend="where">     
			<isNotEmpty prepend="and" property="today"> date_format(ui.write_date, '%Y-%m-%d')   &lt; #today#</isNotEmpty>
        </dynamic>
	</select>
	
	<!--selectUserInfoForPage -->
	<select id="selectUserInfoForPage" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.user.UserInfoVO">
		select 	ui.user_sn userSn , ui.account account , ui.user_nick userNick , ui.user_role userRole , ui.is_tester isTester ,
		ui.is_navy isNavy   , ui.pwd pwd  , ui.head_img_url headImgUrl , ui.is_gag isGag  , ui.user_sub_role userSubRole ,
		ui.is_vip isVip , ui.vip_out_dt vipOutDt  ,   date_format(ui.write_date,'%Y-%m-%d %H')  writeDate  , ui.is_manager isManager
		from 	u_user_info ui 
		<dynamic prepend="where">     
			<isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="account"> ui.account like concat(#account#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="userRole"> ui.user_role = #userRole#</isNotEmpty>
			<isNotEmpty prepend="and" property="isGag"> ui.is_gag = #isGag#</isNotEmpty>
			<isNotEmpty prepend="and" property="userSubRole"> ui.user_sub_role = #userSubRole#</isNotEmpty>
			<isEqual prepend="and" property="isVip" compareValue="Y">ui.vip_out_dt is not null</isEqual>
			<isEqual prepend="and" property="isVip" compareValue="N">ui.is_vip= #isVip#</isEqual>
			<isNotEmpty prepend="and" property="isManager"> ui.is_manager= #isManager#</isNotEmpty>
			<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ui.vip_out_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ui.vip_out_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( ui.write_date , '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( ui.write_date, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
			
        </dynamic>
        order by    date_format( ui.write_date , '%Y-%m-%d %H') desc    , ui.account desc
        <include refid="page"/>
	</select>
	
	<!--selectUserInfoList -->
	<select id="selectUserInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 	ui.user_sn userSn , ui.account account , ui.user_nick userNick , ui.user_role userRole , 
		ui.is_navy isNavy , ui.is_gag isGag
		from 	u_user_info ui 
		<dynamic prepend="where">     
			<isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="account"> ui.account like concat(#account#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="userRole"> ui.user_role = #userRole#</isNotEmpty>
			<isNotEmpty prepend="and" property="isGag"> ui.is_gag = #isGag#</isNotEmpty>
        </dynamic>
        order by ui.user_sn desc    
	</select>
	
	<select id="selectUserInfoCount" parameterClass="java.util.Map" resultClass="Integer">
		select 	count(1)
		from 	u_user_info ui 
		<dynamic prepend="where">     
			<isNotEmpty prepend="and" property="userNick"> ui.user_nick like concat('%',#userNick#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="account">ui.account like concat(#account#,'%')</isNotEmpty>
			<isNotEmpty prepend="and" property="userRole"> ui.user_role = #userRole#</isNotEmpty>
			<isNotEmpty prepend="and" property="isGag"> ui.is_gag = #isGag#</isNotEmpty>
			<isNotEmpty prepend="and" property="userSubRole"> ui.user_sub_role = #userSubRole#</isNotEmpty>
			<isEqual prepend="and" property="isVip" compareValue="Y">ui.vip_out_dt is not null</isEqual>
			<isEqual prepend="and" property="isVip" compareValue="N">ui.is_vip= #isVip#</isEqual>
			<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ui.vip_out_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ui.vip_out_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( ui.write_date , '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( ui.write_date, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
        </dynamic>
	</select>
	
	
	<!--updateUserRole -->
	<update id="updateUserRole" parameterClass="com.fq.dao.entity.po.user.UserInfoPO">
		update u_user_info 
		set  user_role = #userRole#  , user_sub_role=#userSubRole#
		where account = #account#
	</update>
	
	<!-- selectUserPhotoesAccount 查询用户相册 -->
	<select id="selectUserPhotoesByAccount" parameterClass="java.lang.String" resultClass="com.fq.dao.entity.vo.user.UserPhotoVO">
	 
	 	select up_id upId , img_qiniukey imgQiniuKey , date_time dateTime
	 	from u_user_photo 
	 	where account = #account# and is_deleted = 'N'
	 
	</select>
	 
	 <update id="deleteUserPhotoes" parameterClass="java.util.List">
	 
	 	update u_user_photo set is_deleted = 'Y'
		where up_id in (
			<iterate conjunction=","> #upIds[]# </iterate>
		)
	 </update>
    
	<!-- insertUserPhoto 添加用户照片 -->
	<insert id="insertUserPhoto" parameterClass="com.fq.form.user.AddUserPhotoForm">
			INSERT INTO 	u_user_photo 
							( account, img_qiniukey, date_time, media_type) 
			VALUES 			( #account#, #imgQiniukey#, now() , 'I');
	</insert>
	
	<!-- updateUserJpoint  修改用户据点 -->
	<update id="updateUserJpoint" parameterClass="com.fq.dao.entity.vo.user.RewardUserInfoVO">
		update 		u_user_info 
		set 		j_point = j_point + #healAmount# 
		where  		account = #account#
	</update>
	
	<!-- insertNewRecord 添加对账记录 -->
	<insert id="insertNewRecord" parameterClass="com.fq.dao.entity.po.TradeAppInfoPO">
			insert 	into 	tp_trade_consume  (  entity_no 	, 		entity_type 	, 		
											app_vol 	, 		app_dt ,
											 app_tm 	,  	
											busi_code 	, 		contract_no)
			values (#entityNo# , #entityType# , 
					#appVol# , 		#appDt# , 
					#appTm# , 	 
					#busiCode# , #contractNo#)
			
	</insert>
	<!--queryTesterList  -->
	<select id="queryTesterList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		ui.account , 		ui.user_nick  userNick 
		from 		u_user_info 	ui 
		where 		ui.is_tester = 'Y'  
		<include refid="page"/>
	</select>	
	<!-- queryTesterTotals  -->
	<select id="queryTesterTotals" resultClass="java.lang.Integer">
		select 		count(ui.account) 
		from 		u_user_info ui 
		where 		ui.is_tester = 'Y'  
	</select>
	<!-- deleteTester -->
	<update id="updateTester"  parameterClass="java.util.Map" >
		update 		u_user_info ui  
		set  		ui.is_tester = #isTester#  
		where 		ui.account = #account#   
	</update>
	
	
	<!--queryNavyList  -->
	<select id="queryNavyList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		ui.account , 		ui.user_nick  userNick 
		from 		u_user_info 	ui 
		where 		ui.is_navy = 'Y'  
		<include refid="page"/>
	</select>	
	<!-- queryNavyTotals  -->
	<select id="queryNavyTotals" resultClass="java.lang.Integer">
		select 		count(ui.account) 
		from 		u_user_info ui 
		where 		ui.is_navy = 'Y'  
	</select>
	<!-- deleteNavy -->
	<update id="updateNavy"  parameterClass="java.util.Map" >
		update 		u_user_info ui  
		set  		ui.is_navy = #isNavy#  
		where 		ui.account = #account#   
	</update>
	
		
	<!-- inserOperateLog -->
	<insert id="insertOperateLog" parameterClass="com.fq.dao.entity.vo.OperateLog">
		insert into l_operate_log  ( user_name , operate  , operate_desc , params , write_date  )
 					values  ( #loginUser.userName# , #resStatus# , #servletPath# , #params# , now() )
	</insert>
	
	
	<select id="selectWaterMansWork" parameterClass="java.util.Map"  resultClass="com.fq.dao.entity.vo.WaterManCommentVO">
		select t.account account , t.content content , t.create_date createDate , model from  (
			select c.user_account account , c.content , c.create_date  , '项目评论' model from p_project_comment c
			union all
			select lc.opr_account account , lc.content , lc.create_date  ,'剧圈评论' model from p_project_log_comment lc 
			where exists (select 1 from p_project_log_info pli where pli.pli_id = lc.pli_id and pli.log_type = '1' )	
			union all
			select lc.opr_account account , lc.content , lc.create_date  ,'水区评论' model from p_project_log_comment lc 
			where exists (select 1 from p_project_log_info pli where pli.pli_id = lc.pli_id and pli.log_type = '2')
		) t 
		where t.account like concat('199','%')
		<dynamic>     
			<isNotEmpty prepend="and" property="createDate"> DATE_FORMAT( t.create_date, '%Y-%m-%d') = #createDate#</isNotEmpty>
			<isNotEmpty prepend="and" property="account"> t.account like concat ('%',#account#,'%') </isNotEmpty>
			<isNotEmpty prepend="and" property="model"> t.model=#model#</isNotEmpty>
        </dynamic>
		order by account , t.create_date 
		<include refid="page"/>
	</select>
	
	<select id="selectWaterMansWorkTotal" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(t.account) from  (
			select c.user_account account , c.content , c.create_date  , '项目评论' model from p_project_comment c
			union all
			select lc.opr_account account , lc.content , lc.create_date  ,'剧圈评论' model from p_project_log_comment lc 
			where exists (select 1 from p_project_log_info pli where pli.pli_id = lc.pli_id and pli.log_type = '1' )	
			union all
			select lc.opr_account account , lc.content , lc.create_date  ,'水区评论' model from p_project_log_comment lc 
			where exists (select 1 from p_project_log_info pli where pli.pli_id = lc.pli_id and pli.log_type = '2')
		) t 
		where t.account like concat('199','%')
		<dynamic>     
			<isNotEmpty prepend="and" property="createDate"> DATE_FORMAT( t.create_date, '%Y-%m-%d') = #createDate#</isNotEmpty>
			<isNotEmpty prepend="and" property="account"> t.account like concat ('%',#account#,'%') </isNotEmpty>
			<isNotEmpty prepend="and" property="model"> t.model=#model#</isNotEmpty>
        </dynamic>
		order by account , t.create_date ;
	</select>
	
	<select id="queryAccountIsExist" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(ui.user_sn) from u_user_info ui where ui.account=#account#
	</select>
	<insert id="addNewUser" parameterClass="com.fq.dao.entity.vo.user.AddNewUserVO">
			insert 	into 	u_user_info  (  account 	, 		pwd 	, 		
											j_point 	, 		reward_mount ,
											 attention_nums 	,  	
											follower_nums 	, 		favouite_nums,
											user_role, user_nick,write_date)
			values (#account# , #pwd# , 
					#jpoint# , 		#rewardMount# , 
					#attentionNums# , 	 
					#followerNums# , #favouiteNums#,
					#userRole# , #userNick#,now())
	</insert>
	
	<!-- 分页显示的信息 -->
	<select id="queryUserFeedBackInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select mi.title title,
				ui.user_nick userNick,
				ui.account account,
				uf.feedback_type feedBackType,
				uf.feedback_msg feedBackMessage ,
				uf.has_replied hasReplied ,
				uf.create_dt createDt ,
				uf.create_tm createTm 
				from u_feedback uf 
				left join u_user_info ui on uf.account=ui.account
				left join m_movie_info mi on uf.m_id=mi.m_id
				left join p_project_movie_rel ppmr on ppmr.m_id = uf.m_id
				left join p_project_info ppi on ppi.pi_id=uf.pi_id
		<dynamic prepend="where">
			<isNotEmpty prepend="and " property="projectName">ppi.project_name like concat ('%',#projectName#,'%')</isNotEmpty>
			<isNotEmpty prepend="and " property="episode"> ppmr.episode_no=#episode#</isNotEmpty>
			<isNotEmpty prepend="and " property="account"> uf.account=#account#</isNotEmpty>
			<isNotEmpty prepend="and " property="userNick"> ui.user_nick like concat ('%',#userNick#,'%')</isNotEmpty>
			<isNotEmpty prepend="and " property="hasReplied"> uf.has_replied = #hasReplied# </isNotEmpty>
			<isNotEmpty prepend="and" property="createDt"> <![CDATA[ date_format( uf.create_dt, '%Y-%m-%d')  =  #createDt# ]]>  </isNotEmpty>			
			<isEqual prepend="and" property="type" compareValue="1">
				uf.pi_id = 0
			</isEqual>
			<isEqual prepend="and" property="type" compareValue="2">
				uf.pi_id != 0
			</isEqual>
		</dynamic>
			order by uf.f_id desc
		<include refid="page"/>
	</select>
	<!-- 查询用户反馈信息 -->
	<select id="queryUserFeedBackInfoTotal" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(uf.f_id)
				from u_feedback uf 
				left join u_user_info ui on uf.account=ui.account
				left join m_movie_info mi on uf.m_id=mi.m_id
				left join p_project_movie_rel ppmr on ppmr.m_id = uf.m_id
				left join p_project_info ppi on ppi.pi_id=uf.pi_id
		<dynamic prepend="where">
			<isNotEmpty prepend="and " property="projectName">ppi.project_name like concat ('%',#projectName#,'%')</isNotEmpty>
			<isNotEmpty prepend="and " property="episode"> ppmr.episode_no=#episode#</isNotEmpty>
			<isNotEmpty prepend="and " property="account"> uf.account=#account#</isNotEmpty>
			<isNotEmpty prepend="and " property="userNick">  ui.user_nick like concat ('%',#userNick#,'%')</isNotEmpty>
			<isNotEmpty prepend="and " property="hasReplied"> uf.has_replied = #hasReplied# </isNotEmpty>
			<isNotEmpty prepend="and" property="createDt"> <![CDATA[ date_format( uf.create_dt, '%Y-%m-%d')  =  #createDt# ]]>  </isNotEmpty>
			<isEqual prepend="and" property="type" compareValue="1">
				uf.pi_id = 0
			</isEqual>
			<isEqual prepend="and" property="type" compareValue="2">
				uf.pi_id != 0
			</isEqual>
		</dynamic>
	</select>
	
	<select id="queryUserFeedBackAndNotification" parameterClass="java.lang.String" resultClass="java.util.HashMap">
		select * from (
		
			select 
				'F' otype , 	feedback_msg content, concat(t.create_dt ,' ' ,t.create_tm) creaetDt , 
				'' creator , 	f_id fId	, null mnId  , '' isReaded
			from u_feedback t where account = #account#
			
			union all 
			
			select 
				'N' otype , 	content,            create_date creaetDt,  		
				creator , 		f_id fId,			n.mn_id mnId   ,   n.is_readed isReaded
			from u_notification n
			where notify_account = #account# and notify_type = 4 and f_id is not null
			
		) t
		order by creaetDt desc 
	</select>
	
	<!-- 查询用户的手机信息 -->
	<select id="queryUserMobileInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
			select cci.client_type clientType,cci.client_brand clientBrand,cci.client_model clientModel,
				cci.client_system_no clientSysNo,cci.client_device_no clientDevNo
			from c_client_info cci 
		<dynamic prepend="where">
			<isNotEmpty property="clientType" prepend="and">cci.client_type like concat ('%',#clientType#,'%')</isNotEmpty>
		</dynamic>
		order by cci.ci_id
		<include refid="page"/>
	</select>
	<!-- 查询用户的手机信息 分页的dataCount-->
	<select id="queryUserMobileInfoListTotal" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(cci.ci_id)
		from c_client_info cci 
		<dynamic prepend="where">
			<isNotEmpty property="clientType" prepend="and">cci.client_type like concat ('%',#clientType#,'%')</isNotEmpty>
		</dynamic>
	</select>
	
	<!-- 根据反馈编号查询呢用户反馈信息 -->
	<select id="queryUserFeedBackByFId" parameterClass="java.lang.Integer" resultClass="java.util.HashMap">
		select f.f_id fId, f.account account from u_feedback f
		where f.f_id = #fId#
	</select>
	
	<update id="updateUserFeedbackReplyState" parameterClass="java.util.Map">
		
		update u_feedback set has_replied = #hasReplied#
		where f_id = #fId#
	
	</update>
	
	<select id="queryUserByAccount" parameterClass="java.lang.String" resultClass="com.fq.dao.entity.vo.user.UserInfoVO">
		select 	ui.user_sn userSn , ui.account account , ui.user_nick userNick , ui.user_role userRole , ui.is_tester isTester ,
		ui.is_navy isNavy , ui.j_point jPoint
		from 	u_user_info ui 
		where ui.account = #account#
	
	</select>
	
	<update id="updateUserJPoint" parameterClass="com.fq.dao.entity.po.user.UserInfoPO">
		update u_user_info set j_point = #jPoint# where account = #account#
	</update>
	
	<!-- 查询问卷列表信息 -->
	<select id="queryQuestionnaireInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	qi.q_id qId , qi.question_title questionTitle ,  qi.question_Num questionNum , qi.is_deleted  isDeleted ,	
	qi.create_dt  createDt  ,qi.create_tm  createTm ,qi.enable_change enableChange , qi.time_limit timeLimit ,
	qi.question_type questionType , qi.end_dt endDt ,qi.show_result showResult
	from q_question_info qi
	where qi.is_deleted='N'  and qi.question_type=2
	<dynamic >
		<isNotEmpty prepend="and" property="questionTitle" > qi.question_title like concat ('%',#questionTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="questionNum"> qi.question_num =#questionNum#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> qi.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="questionType"> qi.question_type =#questionType#</isNotEmpty>
		<isNotEmpty prepend="and" property="enableChange"> qi.enable_change =#enableChange#</isNotEmpty>
		<isNotEmpty prepend="and" property="timeLimit"> qi.time_limit =#timeLimit#</isNotEmpty>
		<isNotEmpty prepend="and" property="showResult"> qi.show_result =#showResult#</isNotEmpty>
		<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	order by createDt desc 
	<include refid="page"/>
	</select>
	
	<!-- 查询问卷列表信息总数 -->
	<select id="queryQuestionnaireInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
	count(qi.q_id)
	from q_question_info qi
	where qi.is_deleted='N' and qi.question_type=2
	<dynamic>
		<isNotEmpty prepend="and" property="questionTitle" > qi.question_title like concat ('%',#questionTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="questionNum"> qi.question_num =#questionNum#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> qi.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="questionType"> qi.question_type =#questionType#</isNotEmpty>
		<isNotEmpty prepend="and" property="enableChange"> qi.enable_change =#enableChange#</isNotEmpty>
		<isNotEmpty prepend="and" property="timeLimit"> qi.time_limit =#timeLimit#</isNotEmpty>
		<isNotEmpty prepend="and" property="showResult"> qi.show_result =#showResult#</isNotEmpty>
		<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	</select>
	
	<!-- deleteQuestionnaireInfoList 删除问卷调查 -->
	<delete id="deleteQuestionnaireInfoList"  parameterClass="java.util.Map" >
		 update 	q_question_info qi
		            set qi.is_deleted='Y'
		 where 		qi.q_id = #qId# and qi.question_type=2
	</delete>
	
	<insert id="insertQuestionnaireInfoList" parameterClass="java.util.Map">
		insert  into  q_question_info(
		 question_title , is_deleted  , create_dt ,create_tm  ,
			question_type  , end_dt       , time_limit  , enable_change ,show_result
			
		)
		values (
		 #questionTitle# ,#isDeleted#  , #createDt# ,#createTm# ,
			2 , #endDt#       ,#timeLimit#   , #enableChange# ,#showResult#
		)
	</insert>
	
	<!-- 查询问卷列表信息 -->
	<select id="selectQuestionnaireInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	qi.q_id qId , qi.question_title questionTitle , qi.is_deleted  isDeleted ,	
	qi.create_dt  createDt , qi.create_tm  createTm ,qi.enable_change enableChange , qi.time_limit timeLimit ,
	qi.show_result showResult ,qi.end_dt endDt
	from q_question_info qi
	where qi.q_id=#qId# and qi.question_type=2
	</select>
	
	<!-- updateQuestionnaireInfo 更新问卷信息 -->
	<update id="updateQuestionnaireInfo"  parameterClass="java.util.Map" >
		 update 	q_question_info qi    
		 			set qi.question_title = #questionTitle#   ,  qi.is_deleted =#isDeleted# ,
 		 			qi.end_dt = #endDt# , qi.time_limit = #timeLimit#  , qi.show_result= #showResult# ,
 		 			qi.enable_change = #enableChange#
		 where  	qi.q_id = #qId#  and qi.question_type=2
	</update>
	
	<!-- 查询投票列表信息 -->
	<select id="queryVoteInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	qi.q_id qId , qi.question_title questionTitle , qi.question_Num questionNum , qi.is_deleted  isDeleted ,	
	qi.create_dt  createDt  ,qi.create_tm  createTm ,qi.enable_change enableChange , qi.time_limit timeLimit ,
	qi.question_type questionType , qi.end_dt endDt ,qi.show_result showResult
	from q_question_info qi
	where qi.is_deleted='N' and qi.question_type=3
	<dynamic >
		<isNotEmpty prepend="and" property="questionTitle" > qi.question_title like concat ('%',#questionTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="questionNum"> qi.question_num =#questionNum#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> qi.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="questionType"> qi.question_type =#questionType#</isNotEmpty>
		<isNotEmpty prepend="and" property="enableChange"> qi.enable_change =#enableChange#</isNotEmpty>
		<isNotEmpty prepend="and" property="timeLimit"> qi.time_limit =#timeLimit#</isNotEmpty>
		<isNotEmpty prepend="and" property="showResult"> qi.show_result =#showResult#</isNotEmpty>
		<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	order by createDt desc 
	<include refid="page"/>
	</select>
	
	<!-- 查询投票列表信息总数 -->
	<select id="queryVoteInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
	count(qi.q_id)
	from q_question_info qi
	where qi.is_deleted='N' and qi.question_type=3
	<dynamic>
		<isNotEmpty prepend="and" property="questionTitle" > qi.question_title like concat ('%',#questionTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="questionNum"> qi.question_num =#questionNum#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> qi.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="questionType"> qi.question_type =#questionType#</isNotEmpty>
		<isNotEmpty prepend="and" property="enableChange"> qi.enable_change =#enableChange#</isNotEmpty>
		<isNotEmpty prepend="and" property="timeLimit"> qi.time_limit =#timeLimit#</isNotEmpty>
		<isNotEmpty prepend="and" property="showResult"> qi.show_result =#showResult#</isNotEmpty>
		<isNotEmpty prepend="and" property="selectStartDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  >=  #selectStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selectEndDate"> <![CDATA[ date_format( qi.end_dt, '%Y-%m-%d %H:%m:%s')  <=  #selectEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( qi.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	</select>
	
	<insert id="insertVoteInfoList" parameterClass="java.util.Map">
		insert  into  q_question_info(
			question_title , is_deleted  , create_dt ,create_tm  ,
			question_type  , end_dt       , time_limit  , enable_change ,show_result
			
		)
		values (
			#questionTitle# ,#isDeleted#  , #createDt# ,#createTm# ,
			3 , #endDt#       ,#timeLimit#   , #enableChange# ,#showResult#
		)
	</insert>
	
	<!-- 查询投票列表信息 -->
	<select id="selectVoteInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	qi.q_id qId , qi.question_title questionTitle  , qi.is_deleted  isDeleted ,	
	qi.create_dt  createDt , qi.create_tm  createTm ,qi.enable_change enableChange , qi.time_limit timeLimit ,
	qi.show_result showResult , qi.end_dt endDt
	from q_question_info qi
	where qi.q_id=#qId# and qi.question_type=3
	</select>
	
	<!-- updateVoteInfo 更新投票信息 -->
	<update id="updateVoteInfo"  parameterClass="java.util.Map" >
		 update 	q_question_info qi    
		 			set qi.question_title = #questionTitle#  	  ,  qi.is_deleted =#isDeleted# ,
 		 			 qi.end_dt = #endDt# , qi.time_limit = #timeLimit#  , qi.show_result = #showResult# ,
 		 			qi.enable_change = #enableChange# 
		 where  	qi.q_id = #qId#  and qi.question_type=3
	</update>
	
	<!-- deleteVoteInfoList 删除投票 -->
	<delete id="deleteVoteInfoList"  parameterClass="java.util.Map" >
		 update 	q_question_info qi
		            set qi.is_deleted='Y'
		 where 		qi.q_id = #qId# and qi.question_type=3
	</delete>
		
	
	<!-- 查询问卷题目列表信息 -->
	<select id="querySubjectInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	si.s_id sId , si.q_id qId ,
	si.subject_no subjectNo , si.subject_title subjectTitle , si.subject_type subjectType , 
	si.is_deleted isDeleted , si.limit_up limitUp , si.limit_down limitDown  , si.create_dt createDt , 
	si.create_tm createTm 
	from q_subject_info si
	where si.q_id=#qId# and si.is_deleted='N'
	<dynamic>
		<isNotEmpty prepend="and" property="subjectTitle" > si.subject_title like concat ('%',#subjectTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="subjectNo"> si.subject_no =#subjectNo#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> si.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="subjectType"> si.subject_type =#subjectType#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( si.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( si.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	order by createDt desc 
	<include refid="page"/>
	</select>
	
	
	<!-- 查询问卷题目列表信息总数 -->
	<select id="querySubjectInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
	count(si.s_id) 
	from q_subject_info si
	where si.q_id=#qId# and si.is_deleted='N'
	<dynamic>
		<isNotEmpty prepend="and" property="subjectTitle" > si.subject_title like concat ('%',#subjectTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="subjectNo"> si.subject_no =#subjectNo#</isNotEmpty>
		<isNotEmpty prepend="and" property="isDeleted"> si.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="subjectType"> si.subject_type =#subjectType#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( si.create_dt, '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( si.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	</select>
	
	<!-- insertSubjectInfoList 上传题目 -->
	<insert id="insertSubjectInfoList" parameterClass="java.util.Map">
		insert  into  q_subject_info(
			 q_id , subject_no , subject_title , subject_type , limit_up , 
			  limit_down  , create_dt ,create_tm  
		)
		values (
		  #qId# ,	#subjectNo# , #subjectTitle# , #subjectType# , 1024 ,
			#limitDown# ,   #createDt# , #createTm# 
		)
	</insert>
	
	<!-- deleteSubjectInfoList 删除问卷调查 -->
	<delete id="deleteSubjectInfoList"  parameterClass="java.util.Map" >
		 update 	q_subject_info  si
		            set si.is_deleted ='Y'
		 where 		si.s_id = #sId# 
	</delete>
	
	<!-- 查询问卷题目信息 -->
	<select id="selectSubjectInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	si.subject_no subjectNo , si.subject_title subjectTitle , si.subject_type subjectType ,si.q_id qId ,
	si.s_id sId
	from 	q_subject_info  si
	where 	si.s_id=#sId# and si.q_id=#qId#
	</select>
	
	<!-- updateSubjectInfo 更新问卷题目信息 -->
	<update id="updateSubjectInfo"  parameterClass="java.util.Map" >
		 update 	q_subject_info  si
		 			set   si.subject_no = #subjectNo#  	,  si.subject_title = #subjectTitle#  , 
 		 			si.subject_type = #subjectType#	 
		 where  	si.s_id = #sId#  and  si.q_id=#qId# 
	</update>
	
	<!-- updateVoteSubjectInfo 更新投票题目信息 -->
	<update id="updateVoteSubjectInfo"  parameterClass="java.util.Map" >
		 update 	q_subject_info  si
		 			set   si.subject_no = #subjectNo#  	,  si.subject_title = #subjectTitle#  , 
 		 			si.subject_type = #subjectType#	 
		 where  	si.s_id = #sId#  and  si.q_id=#qId# 
	</update>
	
	<!-- 查询问卷信息列表  -->
	<select id="querySubject" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		si.q_id qId ,si.s_id sId
		from 		q_subject_info  si
		where 		si.q_id = #qId# 
	</select>
	<!-- 查询问卷题目选项信息列表  -->
	<select id="querySubjectOptionInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
		si.q_id qId , si.s_id sId  ,so.so_id soId ,so.s_id sId  , so.option_no optionNo , so.option_desc optionDesc  , 
		so.choiced_num choicedNum ,so.create_dt createDt ,so.create_tm createTm , so.is_deleted isDeleted
	from q_subject_option so 
	left join q_subject_info si on si.s_id=so.s_id
	where so.s_id=#sId#  and so.is_deleted='N'
	</select>
	<!-- 查询问卷题目选项总数  -->
	<select id="querySubjectOptionTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
		count(so.so_id)
	from q_subject_option so 
	left join q_subject_info si on si.s_id=so.s_id
	where so.s_id=#sId#  and so.is_deleted='N'
	</select>
	
	<!-- 查询问卷选项信息列表  -->
	<select id="querySubjectOptionList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		si.q_id qId , si.s_id sId ,so.so_id soId , so.s_id sId  , so.option_no optionNo , so.option_desc optionDesc  , 
		so.choiced_num choicedNum ,so.create_dt createDt ,so.create_tm createTm
		from q_subject_option so 
		left join q_subject_info si on si.s_id=so.s_id
		where so.s_id=#sId# and so.is_deleted='N'
	</select>
	
	<!-- upSubjectOption 上传题目选项 -->
	<insert id="upSubjectOption" parameterClass="java.util.Map">
		insert  into  q_subject_option(
			 s_id , option_no, option_desc ,  create_dt , create_tm  
		)
		values (
		  #sId# ,	#optionNo# , #optionDesc# , #createDt# , #createTm# 
		)
	</insert>
	
	<!-- deleteSubjectOption 删除问卷调查 题目-->
	<delete id="deleteSubjectOption"  parameterClass="java.util.Map" >
		 update 	 q_subject_option so
		            set so.is_deleted ='Y'
		 where 		so.so_id = #soId# 
	</delete>
	
	<!-- 查询问卷题目选项信息  -->
	<select id="subjectOptionDetail" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	si.q_id qId , si.s_id sId ,so.so_id soId , so.s_id sId  , so.option_no optionNo ,
		so.option_desc optionDesc  
	from q_subject_option so 
	left join q_subject_info si on si.s_id=so.s_id
	where so.s_id=#sId# and so.so_id=#soId#  and so.is_deleted='N'
	</select>
	
	<!-- updateSubjectOptionInfo 更新问卷题目选项内容 -->
	<update id="updateSubjectOptionInfo"  parameterClass="java.util.Map" >
		 update 	q_subject_option so 
		 			set  so.option_desc = #optionDesc#  
		 where  	so.s_id = #sId#  and  so.so_id=#soId# 
	</update>
	
	<!-- updateQuestionNum 维护问卷调查题目数量 -->
	<update id="updateQuestionNum"  parameterClass="java.util.Map" >
		update q_question_info qi 
		left join (
		select count(si.s_id) questionNum , si.q_id	qId	
		from q_subject_info si 	
		where si.is_deleted='N'		
		group by si.q_id
		)t on t.qId=qi.q_id
		set qi.question_num = t.questionNum				
		where qi.is_deleted='N' and qi.question_type=2 and qi.q_id=#qId#
	</update>
	
	<!-- updateVoteNum 维护投票题目数量 -->
	<update id="updateVoteNum"  parameterClass="java.util.Map" >
		update q_question_info qi 
		left join (
		select count(si.s_id) questionNum , si.q_id	qId	
		from q_subject_info si 	
		where si.is_deleted='N'		
		group by si.q_id
		)t on t.qId=qi.q_id
		set qi.question_num = t.questionNum				
		where qi.is_deleted='N' and qi.question_type=3 and qi.q_id=#qId#
	</update>
	<insert id="insertBatchNewUser" parameterClass="java.util.Map">
		insert 		into 			u_user_info   		
				(  	account , 	head_img_url  , user_role  ,is_navy  , user_nick , j_point  , reward_mount , 
				attention_nums ,follower_nums , favouite_nums  , write_date , pwd 
					
				)  
		values 	(  #account#  , #headImgUrl#  , 1 , 'Y' ,#userNick#  , 0 , 0 ,0 , 0 ,0 , now() , #pwd#)
	</insert>
	<!-- updateGag 修改用户禁言状态 -->
	<update id="updateGag" parameterClass="java.util.Map">
		update u_user_info ui
		set ui.is_gag=#isGag#
		where ui.account=#account#
	</update>
	
	<select id="selectUserInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	ui.account account , ui.mobile mobile
	from u_user_info  ui 
	where ui.account=#account#
	</select>
	
	<update id="updateUserInfo" parameterClass="java.util.Map">
	update u_user_info ui
	set ui.mobile=#mobile#
	where ui.account=#account#
	</update>
	
	<!-- 查询用户领取奖励列表信息 -->
	<select id="queryActiveAwardInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	aai.active_award_id activeAwardId,	aai.account account , aai.mobile mobile , aai.active_id activeId ,
	aai.client_device_no clientDeviceNo , aai.have_award haveAward ,
	aai.create_dt createDt , aai.create_tm createTm 
	from a_active_award_info aai
	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="account" > aai.account like concat('%',#account#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="mobile"> aai.mobile like concat('%',#mobile#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="clientDeviceNo"> aai.client_device_no =#clientDeviceNo#</isNotEmpty>
		<isNotEmpty prepend="and" property="haveAward"> aai.have_award =#haveAward#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( aai.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( aai.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	order by  aai.create_dt  desc 
	<include refid="page"/>
	</select>
	
	<!-- 查询用户领取奖励列表信息条目总数 -->
	<select id="queryActiveAwardInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
	count(aai.active_award_id)
	from a_active_award_info aai
	<dynamic prepend="where">
		<isNotEmpty prepend="and" property="account" > aai.account like concat ('%',#account#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="mobile"> aai.mobile like concat ('%',#mobile#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="clientDeviceNo"> aai.client_device_no =#clientDeviceNo#</isNotEmpty>
		<isNotEmpty prepend="and" property="haveAward"> aai.have_award =#haveAward#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( aai.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( aai.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	</select>
	
	
	<!-- 查询活动推广列表信息 -->
	<select id="queryActiveInfoList" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select
		ai.active_id activeId , ai.active_title activeTitle , ai.active_content activeContent ,
		ai.active_url activeUrl , ai.succ_url succUrl , ai.active_rule activeRule ,
		ai.active_award activeAward , ai.is_deleted isDeleted 
		from a_active_info ai 
		where ai.is_deleted ='N'
	<dynamic>
		<isNotEmpty prepend="and" property="isDeleted"> ai.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="activeTitle" > ai.active_title like concat('%',#activeTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="activeContent" > ai.active_content like concat('%',#activeContent#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( aai.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( aai.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	<include refid="page"/>
	</select>
	
	<!-- 查询活动推广列表信息条目总数 -->
	<select id="queryActiveInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
		count(ai.active_id)
		from a_active_info ai 
		where ai.is_deleted ='N'
	<dynamic >
		<isNotEmpty prepend="and" property="isDeleted"> ai.is_deleted =#isDeleted#</isNotEmpty>
		<isNotEmpty prepend="and" property="activeTitle" > ai.active_title like concat('%',#activeTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="activeContent" > ai.active_content like concat('%',#activeContent#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( aai.create_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( aai.create_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
	</dynamic>
	</select>
	
	<select id="queryActiveInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select
		ai.active_id activeId , ai.active_title activeTitle , ai.active_content activeContent ,
		ai.active_url activeUrl , ai.succ_url succUrl , ai.active_rule activeRule ,
		ai.active_award activeAward , ai.is_deleted isDeleted 
		from a_active_info ai 
		where ai.active_id=#activeId# 
	</select>
	
	<!-- deleteActiveInfoList (伪)删除活动推广信息-->
	<delete id="deleteActiveInfoList"  parameterClass="java.util.Map" >
		 update 	a_active_info ai
		            set ai.is_deleted ='Y'
		 where 		ai.active_id = #activeId# 
	</delete>
	
	<update id="updateActiveInfo" parameterClass="java.util.Map">
		update a_active_info ai 
		set  ai.active_title =#activeTitle# , ai.active_content=#activeContent# ,
		ai.active_rule =#activeRule# ,ai.active_award = #activeAward#
		where ai.active_id=#activeId# 
	</update>
	
	<insert id="addActiveInfo" parameterClass="java.util.Map">
		insert 	into 	a_active_info 		
				(  	active_title , 	active_content  , active_url  ,succ_url  , active_rule , active_award ,is_deleted  )  
		values 	
				(  #activeTitle#  , #activeContent#  , #activeUrl# , #succUrl# ,#activeRule#  , #activeAward# , 'N')
				<selectKey resultClass="int" keyProperty="active_id"> 
          			<![CDATA[SELECT LAST_INSERT_ID() AS activeId ]]>   
        		</selectKey> 
	</insert>
	
	<select id="queryActiveUserInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	aai.active_award_id  activeAwardId , aai.account account , aai.mobile mobile ,
	aai.active_id activeId , aai.client_device_no  clientDeviceNo , aai.have_award haveAward
	from a_active_info ai 
	left join a_active_award_info aai on aai.active_id = ai.active_id
	where ai.active_id= #activeId# and ai.is_deleted ='N'
	<include refid="page"/>
	</select>
	
	<select id="queryActiveUserInfoTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
	select 
	count(aai.account)
	from a_active_info ai 
	left join a_active_award_info aai on aai.active_id = ai.active_id
	where ai.active_id= #activeId# and ai.is_deleted ='N'
	</select>
	
	<update id="changeUserSubRole" parameterClass="java.util.Map">
		update u_user_info ui
		set ui.user_sub_role=#userSubRole# 
		where ui.account=#account#
	</update>
	<update id="vipFlush" parameterClass="java.lang.String" >
		update 	u_user_info ui set ui.is_vip = 'N' 
		where  ui.vip_out_dt is null  or 
		<![CDATA[ 	ui.vip_out_dt <  #now# ]]>
	</update>
	
	<!-- 演员活动过期定时刷新 -->
	<update id="updateActorActivitie" parameterClass="java.lang.Integer" >
		update 	
		o_oscar_active_info  ai 
		set ai.is_expired = 'Y' 
		where ai.oa_id = #oaId#
	</update>
	
	<!-- 投票活动过期定时刷新 -->
	<update id="updateChestExpired" parameterClass="java.lang.String" >
		update 	
		u_user_chest  uc 
		set uc.is_expired = 'Y' 
		where  
		<![CDATA[ 	uc.end_dt <  #now# ]]>
	</update>
	
	<select id="selectIsReplyUserInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
	select 
	ui.account  account, ui.user_nick   userNick
	from u_user_info ui 
	where ui.account =#account#
	</select>
	
	<select id="selectExpiredActivitie" resultClass="com.fq.dao.entity.vo.OscarActiveVO" parameterClass="java.lang.String" >
		select ai.oa_id oaId  , ai.active_type  activeType
		from o_oscar_active_info ai
		where ai.is_expired = 'N'	and 
			<![CDATA[ 	ai.end_dt <=  #now# ]]>
	</select>
	
	<update id="updateProjectLogInfoByOaId" parameterClass="java.lang.Integer">
		update 
		p_project_log_info li
		set li.is_use = 'N'
		where li.oa_id = #oaId#
	</update>
	
	<select id="selectOscarActiveInfo" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.OscarActiveVO">
		select 
		ai.oa_id oaId , ai.active_title activeTitle , ai.end_dt endDt ,
		ai.create_dt createDt , ai.create_tm createTm , ai.is_expired isExpired  ,
		ai.active_img_url activeImgUrl , ai.active_rule  activeRule   , ai.start_dt startDt ,
		ai.active_bgi_2x  activeBgiTwoX  , 	ai.active_bgi_3x  activeBgiThreeX , 
		ai.active_bgi_2x_2 activeBgiTwoX2 , ai.active_bgi_3x_2 activeBgiThreeX2 , ai.active_type activeType
		from o_oscar_active_info ai 
		<dynamic prepend="where">
		<isNotEmpty prepend="and" property="activeTitle"> ai.active_title like concat('%',#activeTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="isExpired"> ai.is_expired = #isExpired#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ai.start_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ai.start_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDt"> <![CDATA[ date_format( ai.end_dt , '%Y-%m-%d')  >=  #selStartDt# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDt"> <![CDATA[ date_format( ai.end_dt, '%Y-%m-%d')  <=  #selEndDt# ]]>  </isNotEmpty>
		</dynamic>
			order by ai.create_dt desc
		<include refid="page"/>
	</select>
	
	<select id="selectOscarActiveInfoTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select 
		count(ai.oa_id)
		from o_oscar_active_info ai 
		<dynamic prepend="where">
		<isNotEmpty prepend="and" property="activeTitle"> ai.active_title like concat('%',#activeTitle#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="isExpired"> ai.is_expired = #isExpired#</isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ai.start_dt , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ai.start_dt, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selStartDt"> <![CDATA[ date_format( ai.end_dt , '%Y-%m-%d')  >=  #selStartDt# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDt"> <![CDATA[ date_format( ai.end_dt, '%Y-%m-%d')  <=  #selEndDt# ]]>  </isNotEmpty>
		</dynamic>
	</select>
	
	<insert id="insertOscarActiveInfo" parameterClass="java.util.Map">
		insert into o_oscar_active_info
				(
					 active_title 	,  active_rule  , create_dt ,  create_tm  , 
					 is_expired     ,   start_dt  ,  end_dt      , active_img_url  ,
					 active_bgi_2x  , active_bgi_3x	, active_bgi_2x_2 , active_bgi_3x_2 ,
					 active_type
				)
		values (
			 		#activeTitle#  ,  #activeRule#  ,  #createDt# , #createTm# ,
			 		 'N'           ,  #startDt#  ,  #endDt#       ,  #activeImgUrl# ,
			 		 #activeBgiTwoX# , #activeBgiThreeX# ,    #activeBgiTwoX2# , #activeBgiThreeX2# ,
			 		 #activeType#
				)
	</insert>
	
	<select id="selectOscarActiveDetail" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		ai.oa_id oaId ,  ai.active_title activeTitle , ai.start_dt startDt , ai.end_dt endDt , ai.create_dt createDt , 
		ai.create_tm createTm , ai.is_expired isExpired , ai.active_img_url activeImgUrl ,ai.active_rule activeRule ,
		ai.active_bgi_2x activeBgiTwoX , ai.active_bgi_3x  activeBgiThreeX , ai.active_bgi_2x_2 activeBgiTwoX2 , 
		ai.active_bgi_3x_2 activeBgiThreeX2  , ai.active_type  activeType
		from o_oscar_active_info ai 
		where ai.oa_id = #oaId#
	</select>
	
	<update id="updateOscarActiveInfo" parameterClass="java.util.Map">
		update o_oscar_active_info ai 
		set ai.active_title = #activeTitle# , ai.active_rule = #activeRule# , 
			ai.end_dt = #endDt#  ,  ai.start_dt = #startDt#   , ai.active_bgi_2x = #activeBgiTwoX# ,
			ai.active_bgi_3x = #activeBgiThreeX# , ai.active_img_url = #activeImgUrl# , 
			ai.active_bgi_2x_2 = #activeBgiTwoX2# , ai.active_bgi_3x_2 = #activeBgiThreeX2#
		where ai.oa_id = #oaId#
	</update>
	
	<select id="selectOscarActiveActorInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		aa.oaa_id oaaId , aa.oa_id oaId , aa.account account , aa.award_words awardWords , aa.order_index orderIndex ,
		sum(t.cnt)  cntNum 
		from o_oscar_active_actor aa
	  	left join   (	
				select actor_account account  , count(1)*v.vote_weight  cnt 
				from l_oscar_actor_vote_log l
				left join o_oscar_active_vote v on v.oav_id = l.oav_id
				where oa_id = #oaId#
				group by l.actor_account , l.oav_id
			
		)t on t.account = aa.account
		where aa.oa_id = #oaId# 
		group by t.account 
		<dynamic >
		<isNotEmpty prepend="and" property="account"> aa.account like concat('%',#account#,'%')</isNotEmpty>
		</dynamic>
			order by aa.order_index desc
		<include refid="page"/>
	</select>
	
	<select id="selectOscarActiveActorInfoTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select 
		count(aa.oaa_id)
		from o_oscar_active_actor aa
		where aa.oa_id = #oaId# 
		<dynamic>
		<isNotEmpty prepend="and" property="account"> aa.account like concat('%',#account#,'%')</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="selectActiveActor" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		aa.oaa_id oaaId , aa.oa_id oaId 
		from 		o_oscar_active_actor  aa
		where 		aa.oa_id = #oaId# 
	</select>
	
	<insert id="insertOscarActiveActorInfo" parameterClass="java.util.Map">
		insert into o_oscar_active_actor
				(  oa_id , account 	,  award_words )
		values  (  #oaId#  , #account#  ,  #awardWords# )
	</insert>
	
	<select id="selectOscarActiveActorDetail" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 		aa.oaa_id oaaId ,aa.oa_id oaId , aa.account  account,
					aa.award_words   awardWords
		from 		o_oscar_active_actor  aa
		where 		aa.oaa_id = #oaaId# 
	</select>
	
	<update id="updateOscarActiveActorInfo" parameterClass="java.util.Map">
		update  o_oscar_active_actor  aa
		set aa.account = #account# , aa.award_words = #awardWords# 
		where 		aa.oaa_id = #oaaId# 
	</update>
	
	<!-- 演员活动选票列表查询 -->
	<select id="selectOscarActiveVoteInfo" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		av.oav_id oavId , av.vote_name voteName , av.vote_type voteType , 
		av.vote_img voteImg , av.vote_price votePrice , av.vote_jpoint voteJpoint ,
		av.vote_desc voteDesc , av.order_index orderIndex , av.is_use isUse ,av.vote_weight voteWeight
		from o_oscar_active_vote av 
		where av.is_use = 'Y'
		<dynamic >
		<isNotEmpty prepend="and" property="voteName"> av.vote_name like concat('%',#voteName#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="voteType"> av.vote_type = #voteType#</isNotEmpty>
		<isNotEmpty prepend="and" property="votePrice"> av.vote_price = #votePrice#</isNotEmpty>
		<isNotEmpty prepend="and" property="voteJpoint"> av.vote_jpoint = #voteJpoint#</isNotEmpty>
		</dynamic>
			order by av.order_index desc
		<include refid="page"/>
	</select>
	<!-- 演员活动选票列表信息总数 -->
	<select id="selectOscarActiveVoteInfoTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select  
		count(av.oav_id)
		from o_oscar_active_vote av
		where av.is_use = 'Y'
		<dynamic >
		<isNotEmpty prepend="and" property="voteName"> av.vote_name like concat('%',#voteName#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="voteType"> av.vote_type = #voteType#</isNotEmpty>
		<isNotEmpty prepend="and" property="votePrice"> av.vote_price = #votePrice#</isNotEmpty>
		<isNotEmpty prepend="and" property="voteJpoint"> av.vote_jpoint = #voteJpoint#</isNotEmpty>
		</dynamic>
	</select>
	
	<select id="selectOscarActiveVoteDetail" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select
		av.oav_id oavId , av.vote_name voteName , av.vote_type voteType , 
		av.vote_img voteImg , av.vote_price votePrice , av.vote_jpoint voteJpoint ,
		av.vote_desc voteDesc , av.order_index orderIndex , av.is_use isUse ,av.vote_weight voteWeight
		from o_oscar_active_vote av 
		where av.oav_id = #oavId#
	</select>
	
	<update id="updateOscarActiveVoteInfo" parameterClass="java.util.Map">
		update  o_oscar_active_vote av 
		set	   av.vote_name = #voteName# , av.vote_desc = #voteDesc#   , 
			   av.vote_price = #votePrice# , av.vote_jpoint = #voteJpoint#  ,
			   av.vote_img =#voteImg# , av.vote_weight = #voteWeight#
		where  av.oav_id = #oavId#
	</update>
	
	<insert id="insertOscarActiveVoteInfo" parameterClass="java.util.Map">
		insert into o_oscar_active_vote  
				(   vote_name ,  vote_desc , vote_price  , vote_jpoint , vote_type  , 
				    order_index  , vote_img , is_use  , vote_weight)
		values  (  #voteName# , #voteDesc# , #votePrice# , #voteJpoint# , #voteType# , 
					#orderIndex#  , #voteImg# , 'Y'  , #voteWeight#  )
	</insert>
	
	<delete id="deletedOscarActiveVoteInfoList"  parameterClass="java.util.Map" >
		 update 	o_oscar_active_vote  av
		            set av.is_use = 'N'
		 where 		av.oav_id = #oavId#
	</delete>
	
	<update id="updateActiveVoteOrderIndex" parameterClass="java.util.Map">
		update 	o_oscar_active_vote  av
		set 	av.order_index = #orderIndex# 
		where 	av.oav_id = #oavId# 
	</update>
	
	<update id="updateActiveActorOrderIndex" parameterClass="java.util.Map">
		update 	o_oscar_active_actor  aa
		set 	aa.order_index = #orderIndex# 
		where 	aa.oaa_id = #oaaId# 
	</update>
	
	<select id="selectActiveVoteType"  resultClass="java.lang.String" >
		select
		av.vote_type voteType 
		from o_oscar_active_vote av
		where av.is_use = 'Y'
	</select>
	
	<select id="selectExpireVipAccount"  resultClass="java.util.HashMap" >
		select
		ui.account account , ui.vip_out_dt vipOutDt
		from u_user_info ui 
		where   ui.is_vip = 'Y' and 
		<![CDATA[ 	ui.vip_out_dt <  #now# ]]> 
	</select>
	
	<insert id="insertExpireVipAccountInfo" parameterClass="java.util.Map">
		insert into l_vip_expired_log  
				(   account ,  vip_out_dt ,  create_dt )
				
		values  (  #account# , #vipOutDt# ,   #nowDt#  )
	</insert>
	
	<select id="selectInWeekExpiredVipAccountInfoList"   parameterClass="java.lang.String"  resultClass="java.lang.String" >
		select
		ui.account account 
		from u_user_info ui 
		where   ui.is_vip = 'Y' and   timestampdiff( day,#nowDt# ,ui.vip_out_dt )  &lt; 7 
								and   timestampdiff( day,#nowDt# ,ui.vip_out_dt )  &gt;= 0
	</select>
	
	<insert id="insertInWeekExpiredVipAccountInfo" parameterClass="java.util.Map">
		insert into l_vip_7_days_log 
				(   account ,  is_remind  , create_dt )
				
		values  (  #account# ,    'N'     ,  #nowDt#  )
	</insert>
	
	<delete  id="truncateVipWeekDaysLog"> 
		truncate 
		table 
		l_vip_7_days_log 
	</delete>
	
	<update id="updateManager" parameterClass="java.util.Map">
		update 
		u_user_info ui
		set ui.is_manager = #isManager#
		where ui.account  = #account#
	</update>
	
	<select id="selectUserDetailInfo" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.user.UserInfoVO">
		select 
		ui.account 			account 		,  ui.user_nick 	userNick   , 	ui.address 		address 	,	ui.way 			way  , 
		ui.user_third_type  userThirdType   ,  ui.user_role 	userRole   ,	date_format(ui.write_date , '%Y-%m-%d')  writeDate ,   
		ci.client_type  clientType			,  ui.is_vip		isVip	   ,	ui.vip_out_dt   vipOutDt
		from  u_user_info ui 
		left join c_client_info ci on ci.account = ui.account 
		where ui.account = #account#
		group by ui.account 
	</select>	
	
	<select id="selectUserJpointLogInfoList" parameterClass="java.util.Map"  resultClass="com.fq.dao.entity.vo.user.UserJPointLogVO">
		select 
	    ujl.l_id  lId , 	ujl.op  op ,   ujl.j_point  jPoint ,  ujl.coin_type  coinType   , ujl.write_date  writeDate , ujl.account account 
	    from l_user_jpoint_log  ujl 
	    where ujl.account = #account#
		<dynamic>     
			<isNotEmpty prepend="and" property="op"> ujl.op = #op#</isNotEmpty>
			<isNotEmpty prepend="and" property="coinType"> ujl.coin_type = #coinType#</isNotEmpty>
			<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ujl.write_date , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ujl.write_date, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
        </dynamic>
		order by ujl.write_date desc
		<include refid="page"/>
	</select>
	
	<select id="selectUserJpointLogInfoListTotals" parameterClass="java.util.Map"  resultClass="java.lang.Integer">
		select 
	    count(ujl.l_id)
	    from l_user_jpoint_log  ujl 
	    where ujl.account = #account#
		<dynamic>     
			<isNotEmpty prepend="and" property="op"> ujl.op = #op#</isNotEmpty>
			<isNotEmpty prepend="and" property="coinType"> ujl.coin_type = #coinType#</isNotEmpty>
			<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ujl.write_date , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ujl.write_date, '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
        </dynamic>
	</select>
	
	<select id="selectUserRechargeRecord" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.user.UserJPointLogVO">
		 select   
		 (ujl.j_point)/100  jPoint , date_format(ujl.write_date , '%Y-%m-%d')  writeDate
		 from l_user_jpoint_log  ujl 
		 where ujl.op = '6'  and ujl.account = #account#
		 order by ujl.write_date asc 
		 limit 1
	</select>	
	
	
		
	<select id="queryUserBehaviors" parameterClass="java.lang.String" resultClass="com.fq.dao.entity.vo.user.UserBehaviorVO">
		
select * from 
	(
		select '注册' behavior , '' target , u.write_date operateDate from u_user_info u where u.account = #account#
	    union all 
	    select l.op_desc behavior , '' target , l.write_date operateDate from l_user_jpoint_log l where l.account = #account# and l.op = '5'
	    union all
	    select '发布项目评论' behavior , p.project_name target , c.create_date operateDate from p_project_comment c left join p_project_info p on p.pi_id = c.pi_id where c.user_account = #account# and c.is_use = 'Y'
		 union all
		 select '发布项目评论回复' behavior , p.project_name target , r.create_date operateDate from p_project_comment_reply r left join p_project_info p on r.pi_id = p.pi_id where r.opr_account = #account# 
		 union all 
	      select '项目评论点赞' behavior , /* p.project_name */ '' target , pr.create_date operateDate from p_project_comment_praise pr /* left join p_project_comment c on c.pc_id = pr.pc_id left join p_project_info p on c.pi_id = p.pi_id */ where pr.opr_account = #account#  
	     union all
	     select '水区发贴' behavior , '' target , l.create_date operateDate from p_project_log_info l where l.account = #account# and l.log_type = '2'
	     union all
	     select '水区回复' behavior , '' target , l.create_date operateDate from p_project_log_comment c inner join p_project_log_info l on l.pli_id = c.pli_id and l.log_type = '2' where c.opr_account = #account# 
		 union all
	     select '水区点赞' behavior , '' target , l.create_date operateDate from p_project_log_praise pr 
	     inner join p_project_log_info l on pr.pli_id = l.pli_id and l.log_type = '2' 
	     where pr.opr_account = #account#
	     union all 
		 select '剧圈发帖' behavior , p.project_name target , p.create_date operateDate  from p_project_log_info l left join p_project_info p on l.pi_id = p.pi_id where l.account = #account#  and l.log_type = '1'
	     union all
	     select '剧圈回复' behavior , p.project_name target , c.create_date from p_project_log_comment c inner join p_project_log_info l on l.pli_id = c.pli_id and l.log_type = '1' left join p_project_info p on p.pi_id = c.pi_id where c.opr_account = #account#
		 union all
	     select '剧圈点赞' behavior , p.project_name target , pr.create_date from p_project_log_praise pr inner join p_project_log_info l on l.pli_id = pr.pli_id and l.log_type = '1' left join p_project_info p on p.pi_id = l.pi_id where pr.opr_account = #account# 
		 union all
	     select '资源区发帖' behavior , '' target , l.create_date  from p_project_log_info l where l.account = #account# and l.log_type = '3' 
		 union all
	     select '看图片剧' behavior , m.title , l.write_date  from l_user_play_log l left join m_movie_info m on m.m_id = l.m_id where l.account = #account#
	     union all
	     select '看漫画' behavior , concat( plc.cartoon_title ,' ' , c.title ) , concat( h.create_dt , ' ' , h.create_tm ) from l_live_cartoon_visit_log h left join plc_live_cartoon_chapter c on c.lc_id = h.lc_id left join plc_live_cartoon plc on plc.plc_id = c.plc_id where h.account = #account#
	     union all
		 select '解锁漫画'  ,concat( plc.cartoon_title ,' ' , c.title ) target , concat( pm.create_dt , ' ' , pm.create_tm ) from plc_user_read_permision pm left join plc_live_cartoon_chapter c on c.lc_id = pm.lc_id left join plc_live_cartoon plc on plc.plc_id = c.plc_id where pm.account = #account#
	     union all
	     select '送礼' , u.user_nick , g.giving_date from u_gift_giving g left join u_user_info u on u.account = g.apply_account where g.opr_account = #account# 
	     union all
	     select '凑份子' , m.title , map.heal_date from u_movie_heal_account_map map left join m_movie_info m on m.m_id = map.m_id where map.papa_account = #account#
	     union all 
	     select '分享漫画' , '' target , concat( l.create_dt , ' ' , l.create_tm ) from l_live_cartoon_share_log l where l.account = #account#  /* 有问题 */
	     union all
	     select '分享剧集' , m.title target , l.write_date from l_user_share_log l left join m_movie_info m on m.m_id = l.m_id where l.account = #account# 
	     union all
	     select '收藏' , m.title , c.write_date from u_collection_info c left join m_movie_info m on m.m_id = c.m_id where c.account = #account#
	     union all
	     select '追漫' , plc.cartoon_title , concat(c.create_dt , ' ' , c.create_tm ) from plc_chase_cartoon c left join plc_live_cartoon plc on plc.plc_id = c.plc_id where c.account = #account#
	     union all
		 select '追剧' , p.project_name , c.create_date from p_project_chase c left join p_project_info p on p.pi_id = c.pi_id where c.opr_account = #account#
	     union all
	    select '充值' , app.app_amt , concat( date_format(app.app_dt , '%Y-%m-%d') , ' ' , app.app_tm) from tp_trade_app app where app.entity_no = #account# and app.pmt_state = '2'
	) t 
	order by t.operateDate desc
	</select>
	
	<!-- 用户行为统计 -->
	<select id="selectUserBehaviorsCount" parameterClass="java.lang.String" resultClass="com.fq.dao.entity.vo.user.UserBehaviorVO">
		select * from (
			select '钱包金额' behavior  , uw.cash_amt  target from u_user_wallet uw  where  uw.account = #account#    
			union all
			select '冻结金额' behavior ,  uw.frozen_amt  target from u_user_wallet uw  where  uw.account = #account#    
			union all 
			select '点赞数量' behavior , sum(a.cnt) target  from (
			select count(1) cnt from p_project_comment_praise pcp where pcp.opr_account = #account# 
				union all 
				select count(1) cnt from p_project_log_praise plp  where plp.opr_account = #account# 
			)a
			union all
			select '邀请数量'  behavior  , count(1) target from l_user_jpoint_log ujl where ujl.account = #account#   and ujl.op = '19' 
			union all 
			select '分享次数' behavior , sum(b.cnt) target  from (
				select count(1) cnt  from l_live_cartoon_share_log sl where sl.account = #account# 
				union all 
				select count(1) cnt  from l_user_share_log usl where usl.account =  #account# 
			)b
			union all 
			select '付费解锁漫画数量' behavior ,  count(1)  target from plc_user_read_permision p  where p.account = #account# 
			union all
			select '追剧数量 ' behavior ,  count(1)  target from  p_project_chase pc where pc.opr_account = #account#  
			union all
			select '追漫数量 ' behavior ,  count(1)  target from plc_chase_cartoon cc where cc.account = #account#  
			union all 
			select '收藏数量 ' behavior ,  count(1)  target from u_collection_info ci where ci.account = #account# 
			union all 
			select '弹幕数量' behavior , sum(c.cnt) target  from (
				select count(1) cnt  from plc_chapter_barrage b where b.account = #account#  
				union all 
				select count(1) cnt  from m_danmaku d  where d.account = #account# 
			)c
			union all 
			select '关注数量 ' behavior ,  count(1)  target from  u_attention_info ai  where ai.follower_account  = #account# 
			union all 
			select '粉丝数量 ' behavior ,  count(1)  target from  u_attention_info ai  where ai.account   = #account# 
			union all 
			select '送礼物总额(剧点) ' behavior ,  sum(g.gift_jpoint)  target from u_gift_giving g where g.opr_account = #account# 
			union all 
			select '凑份子总额 (剧点)' behavior ,  sum(m.heal_amount) target from u_movie_heal_account_map m where m.papa_account = #account#  	 	
		)t 
	</select>
	
	<select id="selectNewUserCountInfoList" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.user.NewUserVO">
		select 
		count(1) newUserCount , date_format(ui.write_date,'%Y-%m-%d')  writeDate
		from u_user_info ui 
		where date_format (ui.write_date  , '%Y-%m-%d') &lt; #today#  
		
		<dynamic>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ui.write_date  , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ui.write_date , '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
		</dynamic>
			group by date_format(ui.write_date,'%Y-%m-%d') 
			order by ui.write_date desc 
		<include refid="page"/>
	</select>
	
	<select id="selectNewUserCountInfoListTotals" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select  count(1)
		from (select 
		count(1) newUserCount , date_format(ui.write_date,'%Y-%m-%d')  writeDate
		from u_user_info ui 
		where date_format (ui.write_date  , '%Y-%m-%d') &lt; #today#  
		<dynamic>
		<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ date_format( ui.write_date  , '%Y-%m-%d')  >=  #selStartDate# ]]>  </isNotEmpty>
		<isNotEmpty prepend="and" property="selEndDate"> <![CDATA[ date_format( ui.write_date , '%Y-%m-%d')  <=  #selEndDate# ]]>  </isNotEmpty>
		</dynamic>
		group by date_format(ui.write_date,'%Y-%m-%d') 
		)t
	</select>	
	
	<select id="selectUserTotalCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select 
		count(1) userTotalCount 
		from  u_user_info ui
		where date_format (ui.write_date  , '%Y-%m-%d') &lt;= #writeDate#  ;
	</select>
	
	<select id="selectUserVipTotalCount" parameterClass="java.lang.String" resultClass="java.lang.Integer">
		select 
		count(1) vipTotalCount 
		from  u_user_info ui
		where date_format (ui.write_date  , '%Y-%m-%d') &lt;= #writeDate#  and ui.is_vip = 'Y' ;
	</select>
	
	<select id="queryUserReportInfoList" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.report.UserReportVO">
		select 
		r.create_date createDate , r.new_user_cnt newUserCnt , r.user_total_cnt userTotalCnt ,r.vip_cnt vipCnt , r.active_cnt activeCnt ,
		 r.behavior_cnt  behaviorCnt	, r.month_active_cnt monthActiveCnt 
		from r_user_report r 
		<dynamic prepend="where">
			<isNotEmpty prepend="and" property="selStartDate"> <![CDATA[ r.create_date >=  #selStartDate# ]]>  </isNotEmpty>
			<isNotEmpty prepend="and" property="selEndDate" > <![CDATA[ r.create_date <= #selEndDate#  ]]> </isNotEmpty>
		</dynamic>
		order by r.create_date desc
	</select>
	
	<update id="updateVipStateAndOutDate" parameterClass="java.util.Map">
		update  u_user_info ui 
		set ui.is_vip = 'Y' , ui.vip_out_dt = #vipOutDate#
		where ui.account = #account#
	</update>
	
	<insert id="insertVipRechargeLog"  parameterClass="com.fq.dao.entity.vo.pay.VipRechargeLogVO">
		insert into l_vip_recharge_log 
			(p_id  , account   , create_dt   , create_tm  , out_dt , is_np )
		values 
			(#pId# , #account# , #createDt#  , #createTm# ,  #outDt# , #isNp#)	
	</insert>
	
	<select id="selectRedPacketGroupCreatorAccount" resultClass="com.fq.entity.vo.wallet.RedPacketRangeCfgVO">
		select 
		(rprc.used_cnt)/(rprc.total_cnt) percent , rprc.total_cnt  totalCnt , rprc.used_cnt  usedCnt, rprc.bk_rpr_id bkRprId, rprc.range_type  rangeType
		from sp_red_packet_range_cfg rprc
		having percent &gt; 0.8
	</select>
		
	<select id="selectOscarActiveBookInfoList" parameterClass="java.util.Map" resultClass="com.fq.dao.entity.vo.OscarActiveBookVO">
			select
			sum(t.cnt) voteCnt , oab.oab_id oabId , oab.oa_id oaId , oab.book_author bookAuthor , oab.book_name bookName , oab.book_words bookWords ,
			oab.book_detail bookDetail , oab.book_cover_url bookCoverUrl , oab.vote_total_num voteTotalNum , oab.book_type bookType ,
			oab.book_tags bookTags , oab.order_index orderIndex
			from (
      		select actor_account account  , count(1)*v.vote_weight  cnt 
			from l_oscar_actor_vote_log l
			left join o_oscar_active_vote v on v.oav_id = l.oav_id
			where oa_id = #oaId#
			group by l.actor_account , l.oav_id	
			)t	
			right join o_oscar_active_book oab  on oab.oab_id = t.account
			where oab.oa_id = #oaId#
		<dynamic>
		<isNotEmpty prepend="and" property="bookName"> oab.book_name like concat('%',#bookName#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="bookType"> oab.book_type = #bookType#</isNotEmpty>
		</dynamic>
			group by oab.oab_id 	
			order by oab.order_index desc
		<include refid="page"/>
	</select>
		
	<select id="selectOscarActiveBookInfoListTotal" parameterClass="java.util.Map" resultClass="java.lang.Integer">
		select count(oab.oab_id )
		from o_oscar_active_book oab  
		where oab.oa_id = #oaId#
		<dynamic>
		<isNotEmpty prepend="and" property="bookName"> oab.book_name like concat('%',#bookName#,'%')</isNotEmpty>
		<isNotEmpty prepend="and" property="bookType"> oab.book_type = #bookType#</isNotEmpty>
		</dynamic>
	</select>
	
	<insert id="insertOscarActiveBookInfo" parameterClass="java.util.Map">
		insert into o_oscar_active_book   
			(    oa_id , book_author , book_name , book_words , book_detail , 
		          book_cover_url , book_type , book_tags 
 			) 
 		values
 			(   
 				#oaId# , #bookAuthor#,  #trueBookName# , #bookWords# , #bookDetail# , 
 				#bookCoverUrl# , #bookType# , #bookTags#
  			)
	</insert>
	
	<select id="selectOscarActiveBookDetail" parameterClass="java.util.Map" resultClass="java.util.HashMap">
		select 
		oab.oab_id oabId , oab.oa_id oaId , oab.book_author bookAuthor , oab.book_name bookName , oab.book_words bookWords ,
		oab.book_detail bookDetail , oab.book_cover_url bookCoverUrl , oab.vote_total_num voteTotalNum , oab.book_type bookType ,
		oab.book_tags bookTags , oab.order_index orderIndex
		from o_oscar_active_book oab 
		where oab.oab_id = #oabId#
	</select>
	
	<update id="updateOscarActiveBookInfo" parameterClass="java.util.Map">
		update o_oscar_active_book oab  set 
		oab.book_author = #bookAuthor#  , oab.book_name = #bookName#  , oab.book_words = #bookWords# , 
		oab.book_detail = #bookDetail#  , oab.book_cover_url = #bookCoverUrl# , oab.book_type = #bookType#  ,
		oab.book_tags = #bookTags#
		where oab.oab_id = #oabId#
	</update>
		
	<update id="updateActiveBookOrderIndex" parameterClass="java.util.Map">
		update o_oscar_active_book oab  set 
		oab.order_index = #orderIndex#
		where oab.oab_id = #oabId#
	</update>	
	
	<select id="selectIsActiveExist" resultClass="java.lang.Integer">
		select 	count(1) count
		from    o_oscar_active_info ai
		where   ai.is_expired = 'N' 
	</select>
		
	<update id="updateIsExpired" parameterClass="java.util.Map">
		update 	o_oscar_active_info ai 
		set ai.is_expired = #toChangeIsExpired#
		where ai.oa_id = #oaId#
	</update>
	
	<update id="updateVoteTypeState" parameterClass="java.lang.String">
		update o_oscar_active_vote  oav 
		set oav.is_use = 'N'
		where oav.vote_type = #vt#
	</update>
	
	<update id="updateRewardMount">
		update u_user_info ui ,(
			select sum(ri.reward_amount) totalAmount   ,  ri.account account  
			from u_reward_info ri  
			group by ri.account 	
		)t 
		set ui.reward_mount = t.totalAmount 
		where ui.account = t.account 
	</update>
	
	<select id="selectOne">
		select 1
	</select>
	
	<select id="selectRandRealUser" parameterClass="java.lang.Integer" resultClass="com.fq.dao.entity.vo.user.UserInfoVO">
		select u.account , u.user_token userToken , c.client_device_no deviceNo from u_user_info u 
		left join c_client_info c on c.account = u.account 
		where u.is_np = 'Y' and u.is_vip = 'Y' order by rand() LIMIT 1 ,#count#
	</select>

	<update id="updateUserToken" parameterClass="java.util.Map">
		update u_user_info u set u.user_token = #token# where u.account = #account#
	</update>
	
	<select id="selectExistsExpireVipAccount" resultClass="java.lang.String">
		select distinct(vel.account) account  from l_vip_expired_log vel
	</select>
	
	<select id="selectThirdUserInfo" parameterClass="java.lang.Integer" resultClass="com.fq.dao.entity.vo.ThirdUserInfoVO"> 
		select 
		ui.ui_id uiId , ui.a_id aId , ui.partner_name partnerName , ui.partner_brief partnerBrief , ui.corporate_name corporateName , 
		ui.contract_name contractName , ui.id_name idName , ui.phone phone , ui.qq qq , ui.mail mail , ui.address address , 
		ui.opening_bank openingBank , ui.account_name accountName , ui.card_name cardName  
		from u_third_user_info ui 
		where ui.a_id = #adminId#	
	</select>
	
	<delete id="delThirdUserInfo" parameterClass="java.lang.Integer" >
		delete from u_third_user_info  where a_id = #aId#
	</delete>
	
	<insert id="insertThirdUserInfo" parameterClass="java.util.Map">
		insert into u_third_user_info 
			( a_id , partner_name , partner_brief , corporate_name , contract_name , id_name , 
			 phone , qq , mail  , address ,opening_bank , account_name , card_name 	)
		values  
			( #aId#  , #partnerName# , #partnerBrief# , #corporateName# , #contractName# ,#idName# , 
			 #phone# , #qq# , #mail# , #address# , #openingBank# , #accountName# , #cardName#		
			)									
	</insert>
	
		
</sqlMap>