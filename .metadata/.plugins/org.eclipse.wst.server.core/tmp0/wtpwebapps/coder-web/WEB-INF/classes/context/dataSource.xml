<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
         http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
			http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
			http://www.springframework.org/schema/task  
			http://www.springframework.org/schema/task/spring-task-3.2.xsd 
			">
			
    
    <!-- 配置事务管理器 -->  
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
	    <property name="dataSource" ref="dataSource"/>    
	</bean>
	
   <!--配置哪些方法,什么情况下需要回滚--> 
   <tx:advice id="serviceAdvice" transaction-manager="transactionManager">  
	   <tx:attributes>   
	       <!--当代理的service层中的方法抛出异常的时候才回滚,必须加rollback-for参数--> 
	       <tx:method name="do*" propagation="REQUIRED" rollback-for="Throwable"/> 
	       <tx:method name="insert*" propagation="REQUIRED" rollback-for="Throwable"/> 
	       <tx:method name="del*" propagation="REQUIRED" rollback-for="Throwable"/>  
	       <tx:method name="update*" propagation="REQUIRED" rollback-for="Throwable"/>  
	       <!--除了上面标识的方法,其他方法全是只读方法 -->
	       <tx:method name="*" read-only="true"/>  
	   </tx:attributes>  
    </tx:advice>  
    <!-- 配置哪些类的方法需要进行事务管理 -->  
    <aop:config proxy-target-class="true">  
       <aop:pointcut id="servicePointcut" expression="execution(* com.fq.service.*.*(..))"/>  
       <aop:advisor pointcut-ref="servicePointcut" advice-ref="serviceAdvice"/>  
    </aop:config>
	
    
    <!-- 启动spring事务注解，事务注解尽在此 -->  
  	<tx:annotation-driven transaction-manager="transactionManager"/>
    
    <!-- a_acct insert 
	<bean id="acctDao" class="com.fq.dao.AcctDao" >
		<property name="dataSource">  
			<ref bean="dataSource"/>  
		</property>  
		<property name="sqlMapClient">  
			<ref bean="sqlMapClient"/>  
		</property>
	</bean>
    -->
    <!-- a_acct insert 
	<bean id="acctDao" class="com.fq.dao.AcctDao" parent="DataIndexSqlMapClient">
		<property name="dataSource">  
			<ref bean="myIbatis"/>  
		</property>
	</bean>
	<bean id="acctService" class="com.fq.service.AcctService">
	     <property name="acctDao" ref="acctDao" />
	</bean>
	-->
	<!-- 配置事务特性
	  
	<tx:advice id="txAdvice" transaction-manager="事务管理器名称">  
	  
	    <tx:attributes>  
	  
	       <tx:method name="add*" propagation="REQUIRED"/>  
	  
	       <tx:method name="del*" propagation="REQUIRED"/>  
	  
	       <tx:method name="update*" propagation="REQUIRED"/>  
	  
	       <tx:method name="*" read-only="true"/>  
	  
	   </tx:attributes>  
	  
	</tx:advice>  
	   -->  
	  
	  
	<!-- 配置哪些类的方法需要进行事务管理
	  
	<aop:config>  
	  
	   <aop:pointcut id="allManagerMethod" expression="execution(* com.ibatis.manager.*.*(..))"/>  
	  
	   <aop:advisor advice-ref="txAdvice" pointcut-ref="allManagerMethod"/>  
	  
	</aop:config>	
	 -->  
	
	<!-- transactionManager不是必需 
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
		<property name="dataSource">  
			<ref local="dataSource" />  
		</property>  
	</bean>   
	 -->  
</beans>